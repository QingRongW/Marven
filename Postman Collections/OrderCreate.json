{
  "info": {
    "_postman_id": "123ff6bc-d454-4124-aee3-979a09a3952e",
    "name": "OrderCreate",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Flight Book Flow - NDC03GBP",
      "item": [
        {
          "name": "SL RW IATA_AirShoppingRQ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d4fc16a9-b735-4581-ad05-fbfd9444453a",
                "exec": [
                  "// ANA FF\r",
                  "pm.variables.set(\"R_RetailPartnerID\", \"NDC03GBP\");\r",
                  "// pm.variables.set(\"R_RetailPartnerID\", \"TRAVELFUSION\");\r",
                  "pm.variables.set(\"CountryCode\", \"GB\");\r",
                  "pm.variables.set(\"DepartDate\", \"2021-01-16\");\r",
                  "pm.variables.set(\"ReturnDate\", \"2021-01-18\");\r",
                  "\r",
                  "// pm.variables.set(\"IATADest\", \"SIN\");\r",
                  "// pm.variables.set(\"IATAOrigin\", \"NRT\");\r",
                  "\r",
                  "\r",
                  "pm.variables.set(\"IATAOrigin\", \"LHR\");\r",
                  "pm.variables.set(\"IATADest\", \"HND\");\r",
                  "\r",
                  "// pm.variables.set(\"IATADest\", \"LON\");\r",
                  "// pm.variables.set(\"IATAOrigin\", \"TYO\");\r",
                  "\r",
                  "// pm.variables.set(\"DepartDate\", \"2020-11-08\");\r",
                  "// pm.variables.set(\"ReturnDate\", \"2020-11-20\");\r",
                  "// pm.variables.set(\"IATADest\", \"TYO\");\r",
                  "// pm.variables.set(\"IATAOrigin\", \"FRA\");\r",
                  "\r",
                  "// Meals: SIN-NRT, LHR-HND / RBDCODE: Y/G\r",
                  "\r",
                  "// Lounge: flights from/to HND\r",
                  "\r",
                  "// Chargeable seats: CTS-LHR, SIN-NRT, LHR-HND / RBDCODE:S"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "685d4725-0b75-4199-85ff-3486fa95ceaf",
                "exec": [
                  "//printing to console",
                  "console.log(\"************************************************************************************\");",
                  "console.log(\"             Test Case ReturnWay - ServiceListRQ Cache - 2ADT + 2CHD\");",
                  "console.log(\"                           IATA_AirShopping - ReturnWay \" + pm.variables.get(\"Version\"));",
                  "console.log(\"************************************************************************************\");",
                  "",
                  "console.log(\"FLIGHT: \" + pm.variables.get(\"IATAOrigin\") + \"-\" + pm.variables.get(\"IATADest\") + ' (' + pm.variables.get(\"DepartDate\") + ')| ' + pm.variables.get(\"IATADest\") + '-' + pm.variables.get(\"IATAOrigin\") + ' (' + pm.variables.get(\"ReturnDate\") + ')');",
                  "",
                  "console.log(\"PrimaryLangID: \" + pm.variables.get(\"PrimaryLangID\") + \" | CountryCode: \" + pm.variables.get(\"CountryCode\") + \" | RetailPartnerID: \" + pm.variables.get(\"R_RetailPartnerID\") + \" | Currency: \" + pm.variables.get(\"Currency\") + \" | CabinType: \" + pm.variables.get(\"R_Cabin\") + \" | Carrier Code: \" + pm.variables.get(\"Carrier_OwnerCode\") + \" | Carrier Name: \" + pm.variables.get(\"Carrier_Name\"));",
                  "",
                  "console.log(\" \");",
                  "",
                  "//validate the response",
                  "pm.test(\"response is ok\", function() {",
                  "    pm.response.to.have.status(200);",
                  "",
                  "});",
                  "",
                  "// strip the namespace prefixes in the XML response",
                  "var parseString = require('xml2js').parseString;",
                  "var stripPrefix = require('xml2js').processors.stripPrefix;",
                  "",
                  "",
                  "/*---------------------------------------------------------",
                  "        VALIDATE IF THERE IS AN ERROR IN OUR RESPONSE",
                  "  ---------------------------------------------------------",
                  "*/",
                  "parseString(responseBody, {",
                  "    tagNameProcessors: [stripPrefix]",
                  "}, function(err, js) {",
                  "",
                  "    if (err) throw err;",
                  "",
                  "",
                  "    pm.test(\"Check If Error\", function() {",
                  "",
                  "        var error = \"0\";",
                  "",
                  "        if (_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'], \"Error\"))",
                  "            error = \"1\";",
                  "",
                  "        // storing if there is an error in our response",
                  "        pm.globals.set(\"IATA_AirShoppingRS_Error\", error);",
                  "",
                  "        // Validate if error",
                  "        pm.expect(error).to.eql(\"0\");",
                  "",
                  "    });",
                  "",
                  "    // Printing all the error to console",
                  "    if (_.isEqual(pm.globals.get(\"IATA_AirShoppingRS_Error\"), \"1\")) {",
                  "",
                  "",
                  "        console.log(\"---------------------------- ERRORS ------------------------------\");",
                  "",
                  "        var numError = 1;",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Error, (i) => {",
                  "",
                  "            console.log(\"ERROR NUMBER: \" + numError);",
                  "",
                  "            pm.test(\"Check Code\", function() {",
                  "",
                  "                var enc;",
                  "",
                  "                if (_.has(i, \"Code\")) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\"  - Code: \" + i.Code['0']);",
                  "",
                  "                } else {",
                  "",
                  "                    enc = 0;",
                  "",
                  "                    console.log(\"  - Code: <Not Value Found>\");",
                  "                }",
                  "",
                  "                pm.expect(enc).to.eql(1);",
                  "",
                  "            });",
                  "",
                  "            pm.test(\"Check DescText\", function() {",
                  "",
                  "                var enc;",
                  "",
                  "                if (_.has(i, \"DescText\")) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\"  - DescText: \" + i.DescText['0']);",
                  "",
                  "                } else {",
                  "",
                  "                    enc = 0;",
                  "",
                  "                    console.log(\"  - DescText: <Not Value Found>\");",
                  "                }",
                  "",
                  "                pm.expect(enc).to.eql(1);",
                  "",
                  "            });",
                  "",
                  "            pm.test(\"Check TagText\", function() {",
                  "",
                  "                var enc;",
                  "",
                  "                if (_.has(i, \"TagText\")) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\"  - TagText: \" + i.TagText['0']);",
                  "",
                  "                } else {",
                  "",
                  "                    enc = 0;",
                  "",
                  "                    console.log(\"  - TagText: <Not Value Found>\");",
                  "                }",
                  "",
                  "                pm.expect(enc).to.eql(1);",
                  "",
                  "            });",
                  "",
                  "            pm.test(\"Check TypeCode\", function() {",
                  "",
                  "                var enc;",
                  "",
                  "                if (_.has(i, \"TypeCode\")) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\"  - TypeCode: \" + i.TypeCode['0']);",
                  "",
                  "                } else {",
                  "",
                  "                    enc = 0;",
                  "",
                  "                    console.log(\"  - TypeCode: <Not Value Found>\");",
                  "                }",
                  "",
                  "                pm.expect(enc).to.eql(1);",
                  "",
                  "            });",
                  "",
                  "            console.log(\" \");",
                  "",
                  "            numError++;",
                  "",
                  "",
                  "        });",
                  "    }",
                  "",
                  "});",
                  "",
                  "",
                  "/*---------------------------------------------------------",
                  "        LOGIC IF THERE IS NO ERROR",
                  "  ---------------------------------------------------------",
                  "*/",
                  "",
                  "if (_.isEqual(pm.globals.get(\"IATA_AirShoppingRS_Error\"), \"0\")) {",
                  "",
                  "",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        //console.log(js, { depth: null });",
                  "",
                  "        pm.globals.set(\"One_IATA_AirShoppingRS_DestCode\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].DestCode);",
                  "",
                  "        pm.globals.set(\"One_IATA_AirShoppingRS_OriginCode\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].OriginCode);",
                  "        ",
                  "         pm.globals.set(\"One_IATA_AirShoppingRS_OriginDestID\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].OriginDestID);",
                  "",
                  "        pm.globals.set(\"One_IATA_AirShoppingRS_PaxJourneyRefID\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].PaxJourneyRefID);",
                  "        ",
                  "",
                  "        var numOffers = _.size(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer);",
                  "",
                  "",
                  "        console.log(\" ------------------------ OFFERT INFORMATION ------------------------ \");",
                  "",
                  "        console.log(\"numOffers: \" + [numOffers]);",
                  "",
                  "        var selectOffers = _.random(numOffers - 1);",
                  "",
                  "        console.log(\"selectOffers: \" + [selectOffers]);",
                  "",
                  "        //Validating ShoppingResponseID from AirShoppingRS",
                  "        pm.test(\"Check ShoppingResponseRefID exists\", function() {",
                  "",
                  "            var error = \"0\";",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].ShoppingResponse['0'], \"ShoppingResponseID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_AirShoppingRS_ShoppingResponseRefID from AirShoppingRS: Not Value Found\");",
                  "",
                  "            } else {",
                  "                //setting a global variable for ShoppingResponseID from AirShoppingRS",
                  "                pm.globals.set(\"One_IATA_AirShoppingRS_ShoppingResponseRefID\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].ShoppingResponse['0'].ShoppingResponseID);",
                  "",
                  "                //printing to console ShoppingResponseID from AirShoppingRS",
                  "                console.log(\"One_IATA_AirShoppingRS_ShoppingResponseRefID from AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_ShoppingResponseRefID\"));",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        //Validating OfferID from AirShoppingRS",
                  "        pm.test(\"Check OfferID exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers], \"OfferID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_AirShoppingRS_OfferID from AirShoppingRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OfferID form AirShoppingRS",
                  "                pm.globals.set(\"One_IATA_AirShoppingRS_OfferID\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferID);",
                  "",
                  "                //printing to console OfferID from AirShoppingRS",
                  "                console.log(\"One_IATA_AirShoppingRS_OfferID from AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        pm.test(\"Check OfferID - Format is right\", function() {",
                  "",
                  "            error = \"1\";",
                  "",
                  "            if (_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers], \"OfferID\")) {",
                  "",
                  "                pm.expect(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferID['0'].substring(0, 4)).to.contains(\"OFF-\");",
                  "            }",
                  "",
                  "",
                  "        });",
                  "",
                  "        //Validating OfferItemID from AirShoppingRS",
                  "        pm.test(\"Check OfferItemID exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferItem['0'], \"OfferItemID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_AirShoppingRS_OfferItemID from AirShoppingRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OfferItemID from AirShoppingRS",
                  "                pm.globals.set(\"One_IATA_AirShoppingRS_OfferItemID\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferItem['0'].OfferItemID['0']);",
                  "",
                  "                //printing to console OfferItemID from AirShoppingRS",
                  "                console.log(\"One_IATA_AirShoppingRS_OfferItemID from AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferItemID\"));",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        pm.test(\"Check OfferItemID - Format is right\", function() {",
                  "",
                  "            error = \"1\";",
                  "",
                  "            if (_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferItem['0'], \"OfferItemID\")) {",
                  "",
                  "                pm.expect(pm.globals.get(\"One_IATA_AirShoppingRS_OfferItemID\").substring(0, 12)).to.contains(\"OFFIT-FLT-\");",
                  "            }",
                  "",
                  "",
                  "        });",
                  "",
                  "        //Validating OwnerCode from AirShoppingRS",
                  "        pm.test(\"Check if OwnerCode exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers], \"OwnerCode\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_AirShoppingRS_OwnerCode from AirShoppingRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OwnerCode from AirShoppingRS",
                  "                pm.globals.set(\"One_IATA_AirShoppingRS_OwnerCode\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OwnerCode);",
                  "",
                  "                //printing to console OwnerCode from AirShoppingRS",
                  "                console.log(\"One_IATA_AirShoppingRS_OwnerCode from AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OwnerCode\"));",
                  "",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        //Validating OfferExpirationDateTime from AirShoppingRS",
                  "        pm.test(\"Check if OfferExpirationDateTime exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers], \"OfferExpirationDateTime\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_AirShoppingRS_OfferExpirationDateTime from AirShoppingRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                pm.globals.set(\"One_AirShoppingRS_OfferExpirationDateTime\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferExpirationDateTime);",
                  "",
                  "                //printing to console OfferExpirationDateTime from AirShoppingRS",
                  "                console.log(\"One_AirShoppingRS_OfferExpirationDateTime: \" + pm.variables.get(\"One_AirShoppingRS_OfferExpirationDateTime\"));",
                  "",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        //printing to console PaxList",
                  "        console.log(\" \");",
                  "        console.log(\"-------------------------- PAX LIST ----------------------\");",
                  "        //console.log(js, {depth: null});",
                  "",
                  "        var numPass = 1;",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].PaxList['0'].Pax, (l) => {",
                  "",
                  "            //Validating Pax.PaxID from AirShoppingRS",
                  "            pm.test(\"Check if PaxID has the right format\", function() {",
                  "",
                  "                //pm.expect(l.PaxID['0'].substring(0, 4)).to.eql(\"PAX-\");",
                  "                //pm.expect(l.PaxID['0'].substring(4, 7)).to.eql(l.PTC['0']);",
                  "                //pm.expect(l.PaxID['0'].substring(7, 8)).to.eql(\"-\");",
                  "                pm.expect(_.parseInt(l.PaxID['0'].substring(8, 9))).to.be.a(\"number\");",
                  "            });",
                  "",
                  "            // printing information to console",
                  "            console.log(\"      Passenger \" + numPass + \" - PaxID: \" + l.PaxID['0']);",
                  "            console.log(\"      Passenger \" + numPass + \" - PTC: \" + l.PTC['0']);",
                  "            console.log(\" \");",
                  "",
                  "            switch (numPass) {",
                  "                case 1: // setting a global variable for PaxID from AirShoppingRS (first adult)",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PaxID1\", l.PaxID['0']);",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PTC1\", l.PTC['0']);",
                  "",
                  "                        //Validating Pax.PTC from AirShoppingRS",
                  "                        pm.test(\"Check if PTC is the one used in the RQ\", function() {",
                  "",
                  "                            pm.expect(l.PTC['0']).to.eql(\"ADT\");",
                  "",
                  "                        });",
                  "",
                  "                        break;",
                  "",
                  "                case 2: // setting a global variable for PaxID from AirShoppingRS (second adult)",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PaxID2\", l.PaxID['0']);",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PTC2\", l.PTC['0']);",
                  "",
                  "                        // Check if input PTC is the same than the output one",
                  "                        pm.test(\"Check Passenger - second - ADT PTC\", function() {",
                  "",
                  "                            pm.expect(String(pm.globals.get(\"One_IATA_AirShoppingRS_PTC2\"))).to.eql(\"ADT\");",
                  "                        });",
                  "",
                  "                        break;",
                  "                    ",
                  "                case 3: // setting a global variable for PaxID from AirShoppingRS (first child)",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PaxID3\", l.PaxID['0']);",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PTC3\", l.PTC['0']);",
                  "",
                  "                        // Check if input PTC is the same than the output one",
                  "                        pm.test(\"Check Passenger - First - CHD PTC\", function() {",
                  "",
                  "                            pm.expect(String(pm.globals.get(\"One_IATA_AirShoppingRS_PTC3\"))).to.eql(\"CHD\");",
                  "                        });",
                  "",
                  "                    break;                    ",
                  "                    ",
                  "                case 4: // setting a global variable for PaxID from AirShoppingRS (second child)",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PaxID4\", l.PaxID['0']);",
                  "                        pm.globals.set(\"One_IATA_AirShoppingRS_PTC4\", l.PTC['0']);",
                  "",
                  "                        // Check if input PTC is the same than the output one",
                  "                        pm.test(\"Check Passenger - First - CHD PTC\", function() {",
                  "",
                  "                            pm.expect(String(pm.globals.get(\"One_IATA_AirShoppingRS_PTC4\"))).to.eql(\"CHD\");",
                  "                        });",
                  "",
                  "                    break;                      ",
                  "",
                  "                default:",
                  "                    console.log(\"There is no more passengers\");",
                  "                    break;",
                  "            }",
                  "",
                  "            numPass++;",
                  "",
                  "        });",
                  "",
                  "",
                  "        var numPass = 1;",
                  "        var count = 1;",
                  "        _.each(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].OfferItem['0'].FareDetail, (i) => {",
                  "",
                  "            _.each(i.PaxRefID, (k) => {",
                  "",
                  "                console.log(\"======================================================================\");",
                  "                console.log(\" ---------------------- PASSENGER \" + [k] + \" ----------------------- \");",
                  "                console.log(\"   \");",
                  "",
                  "",
                  "                switch (numPass) {",
                  "                    case 1:",
                  "                        pm.test(\"Check if PaxRefID is included in our response\", function() {",
                  "",
                  "                            pm.expect(k).to.eql(pm.globals.get(\"One_IATA_AirShoppingRS_PaxID1\"));",
                  "                        });",
                  "",
                  "                        break;",
                  "",
                  "                    case 2: // setting a global variable for PaxID from AirShoppingRS (first adult)",
                  "                        pm.test(\"Check if PaxRefID is included in our response\", function() {",
                  "",
                  "                            pm.expect(k).to.eql(pm.globals.get(\"One_IATA_AirShoppingRS_PaxID2\"));",
                  "                        });",
                  "",
                  "                        break;",
                  "",
                  "                    default:",
                  "                        console.log(\"There is no more passengers\");",
                  "                        break;",
                  "                }",
                  "",
                  "                numPass++;",
                  "",
                  "            });",
                  "",
                  "",
                  "",
                  "            _.each(i.FareComponent, (j) => {",
                  "                console.log(\" ------------------------ FARE COMPONENTS ------------------------ \");",
                  "",
                  "                // printing to console CabinType",
                  "                console.log(\"     Cabin Type: \" + j.CabinType['0'].CabinTypeCode['0'] + \" - \" + j.CabinType['0'].CabinTypeName['0']);",
                  "",
                  "                switch (count) {",
                  "                    case 1: //(first adult)",
                  "",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_FareBasisCode1\", j.FareBasisCode['0']);",
                  "                        // printing to console FareBasisCode",
                  "                        console.log(\"    One_AirShoppingRS_FareBasisCode1: \" + pm.variables.get(\"One_AirShoppingRS_FareBasisCode1\"));",
                  "",
                  "",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_PaxSegmentRefID1\", j.PaxSegmentRefID['0']);",
                  "",
                  "                        //printing to console OfferExpirationDateTime from AirShoppingRS",
                  "                        console.log(\"     One_AirShoppingRS_PaxSegmentRefID1: \" + pm.variables.get(\"One_AirShoppingRS_PaxSegmentRefID1\"));",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_RBDCode1\", j.RBD['0'].RBDCode['0']);",
                  "",
                  "                        // printing to console RBDCode",
                  "                        console.log(\"     One_AirShoppingRS_RBDCode1: \" + pm.variables.get(\"One_AirShoppingRS_RBDCode1\"));",
                  "",
                  "                        break;",
                  "",
                  "                    case 2: // (second pax)",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_FareBasisCode2\", j.FareBasisCode['0']);",
                  "                        // printing to console FareBasisCode",
                  "                        console.log(\"    One_AirShoppingRS_FareBasisCode2: \" + pm.variables.get(\"One_AirShoppingRS_FareBasisCode2\"));",
                  "",
                  "",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_PaxSegmentRefID2\", j.PaxSegmentRefID['0']);",
                  "",
                  "                        //printing to console OfferExpirationDateTime from AirShoppingRS",
                  "                        console.log(\"     One_AirShoppingRS_PaxSegmentRefID2: \" + pm.variables.get(\"One_AirShoppingRS_PaxSegmentRefID2\"));",
                  "                        //setting a global variable for OfferExpirationDateTime from AirShoppingRS",
                  "                        pm.globals.set(\"One_AirShoppingRS_RBDCode2\", j.RBD['0'].RBDCode['0']);",
                  "",
                  "                        // printing to console RBDCode",
                  "                        console.log(\"     One_AirShoppingRS_RBDCode2: \" + pm.variables.get(\"One_AirShoppingRS_RBDCode2\"));",
                  "                        break;",
                  "",
                  "",
                  "                    default:",
                  "                        console.log(\"There is no more passengers\");",
                  "                        break;",
                  "                }",
                  "",
                  "                count++;",
                  "",
                  "                console.log(\"--------------------- PAX SEGMENT DEP & ARRIVAL ----------------------\");",
                  "",
                  "                _.each(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].DataLists['0'].PaxSegmentList['0'].PaxSegment, (n) => {",
                  "",
                  "                    if (n.PaxSegmentID == pm.variables.get(\"One_AirShoppingRS_PaxSegmentRefID\")) {",
                  "",
                  "",
                  "                        //printing to console OfferExpirationDateTime from AirShoppingRS",
                  "                        console.log(\"     One_AirShoppingRS_PaxSegmentRefID: \" + pm.variables.get(\"One_AirShoppingRS_PaxSegmentRefID\"));",
                  "",
                  "                        _.each(n.Dep['0'].AircraftScheduledDateTime, (m) => {",
                  "",
                  "                            //setting a global variable for DEP_AircraftScheduledDateTime from AirShoppingRS",
                  "                            pm.globals.set(\"One_AirShoppingRS_DEP_AircraftScheduledDateTime\", m);",
                  "                            console.log(\"    DEP One_AirShoppingRS_DEP_AircraftScheduledDateTime: \" + pm.variables.get(\"One_AirShoppingRS_DEP_AircraftScheduledDateTime\"));",
                  "                        });",
                  "",
                  "                        _.each(n.Arrival['0'].AircraftScheduledDateTime, (m) => {",
                  "",
                  "                            //setting a global variable for ARRIVAL_AircraftScheduledDateTime from AirShoppingRS",
                  "                            pm.globals.set(\"One_AirShoppingRS_ARRIVAL_AircraftScheduledDateTime\", m);",
                  "                            console.log(\"    Arrival One_AirShoppingRS_ARRIVAL_AircraftScheduledDateTime: \" + pm.variables.get(\"One_AirShoppingRS_ARRIVAL_AircraftScheduledDateTime\"));",
                  "",
                  "                            console.log(\"(Check with imput date: \" + pm.variables.get(\"DepartDate\") + \" )\");",
                  "                        });",
                  "",
                  "                    }",
                  "",
                  "                });",
                  "",
                  "            });",
                  "",
                  "        });",
                  "",
                  "",
                  "        console.log(\" \");",
                  "        console.log(\"---------------------- PAX JOURNEY REFID ----------------------\");",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].JourneyOverview['0'].JourneyPriceClass, (l) => {",
                  "",
                  "            _.each(l.PaxJourneyRefID, (x) => {",
                  "",
                  "                console.log(\"      PaxJourneyRefID: \" + x);",
                  "",
                  "            });",
                  "",
                  "        });",
                  "",
                  "        console.log(\" \");",
                  "        console.log(\"--------------------------- PRICE ----------------------------\");",
                  "",
                  "        //setting a global variable for TotalAmount from AirShoppingRS",
                  "        pm.globals.set(\"One_AirShoppingRS_TotalAmount\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].TotalAmount[0]._);",
                  "",
                  "        //printing to console TotalAmount from AirShoppingRS",
                  "        console.log(\"One_AirShoppingRS_TotalAmount: \" + pm.variables.get(\"One_AirShoppingRS_TotalAmount\") + \" \" + js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].TotalAmount[0].$.CurCode);",
                  "",
                  "        //setting a global variable for BaseAmount from AirShoppingRS",
                  "        pm.globals.set(\"One_AirShoppingRS_BaseAmount\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].BaseAmount[0]._);",
                  "",
                  "        //printing to console BaseAmount from AirShoppingRS",
                  "        console.log(\"One_AirShoppingRS_BaseAmount: \" + pm.variables.get(\"One_AirShoppingRS_BaseAmount\") + \" \" + js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].BaseAmount[0].$.CurCode);",
                  "",
                  "        //setting a global variable for TaxSummary from AirShoppingRS",
                  "        pm.globals.set(\"One_AirShoppingRS_TaxSummary\", js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].TaxSummary['0'].TotalTaxAmount[0]._);",
                  "",
                  "        //printing to console TaxSummary from AirShoppingRS",
                  "        console.log(\"One_AirShoppingRS_TaxSummary: \" + pm.variables.get(\"One_AirShoppingRS_TaxSummary\") + \" \" + js.Envelope.Body['0'].IATA_AirShoppingRS['0'].Response['0'].OffersGroup['0'].CarrierOffers['0'].Offer[selectOffers].TotalPrice['0'].TaxSummary[0].TotalTaxAmount['0'].$.CurCode);",
                  "        ",
                  "        console.log(' ');",
                  "",
                  "    });",
                  "",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9109cce8-829f-446e-8746-53256fb014b3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{wso2_app_access_token_182}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "text/xml"
              },
              {
                "key": "accept",
                "value": "application/xml"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<?xml version=\"1.0\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Header>\n\t</soapenv:Header>\n    <soapenv:Body>\n        <IATA_AirShoppingRQ\n        xmlns=\"http://www.iata.org/IATA/2015/00/2018.2/IATA_AirShoppingRQ\">\n            <Party>\n                <Sender>\n                    <RetailPartner>\n                        <ContactInfo/>\n                        <RetailPartnerID>{{R_RetailPartnerID}}</RetailPartnerID>\n                    </RetailPartner>\n                </Sender>\n            </Party>\n            <PayloadAttributes>\n                <PrimaryLangID>{{PrimaryLangID}}</PrimaryLangID>\n                <VersionNumber>{{Version}}</VersionNumber>\n            </PayloadAttributes>\n            <PointOfSale>\n                <Country>\n                    <CountryCode>{{CountryCode}}</CountryCode>\n                </Country>\n            </PointOfSale>\n            <Request>\n                <FlightCriteria>\n                    <OriginDestCriteria>\n                        <DestArrivalCriteria>\n                            <IATALocationCode>{{IATADest}}</IATALocationCode>\n                        </DestArrivalCriteria>\n                        <OriginDepCriteria>\n                            <Date>{{DepartDate}}</Date>\n                            <IATALocationCode>{{IATAOrigin}}</IATALocationCode>\n                        </OriginDepCriteria>\n                    </OriginDestCriteria>\n                     <OriginDestCriteria>\n                        <DestArrivalCriteria>\n                            <IATALocationCode>{{IATAOrigin}}</IATALocationCode>\n                        </DestArrivalCriteria>\n                        <OriginDepCriteria>\n                            <Date>{{ReturnDate}}</Date>\n                            <IATALocationCode>{{IATADest}}</IATALocationCode>\n                        </OriginDepCriteria>\n                    </OriginDestCriteria>\n                </FlightCriteria>\n                <Paxs>\n                    <Pax>\n                        <PaxID>PAX-1</PaxID>\n                        <PTC>ADT</PTC>\n                    </Pax>\n                    <Pax>\n                        <PaxID>PAX-2</PaxID>\n                        <PTC>CHD</PTC>\n                    </Pax>\n                  </Paxs>\n                <ResponseParameters>\n                    <CurParameter>\n                        <RequestedCurCode>{{Currency}}</RequestedCurCode>\n                    </CurParameter>\n                </ResponseParameters>\n                <ShoppingCriteria>\n                \t<CabinTypeCriteria>\n                       <CabinTypeCode>{{R_Cabin}}</CabinTypeCode>\n                   </CabinTypeCriteria>\n                    <CarrierCriteria>\n                        <Carrier>\n                            <AirlineDesigCode>{{Carrier_OwnerCode}}</AirlineDesigCode>\n                            <DuplicateDesigInd>true</DuplicateDesigInd>\n                            <Name>{{Carrier_Name}}</Name>\n                        </Carrier>\n                    </CarrierCriteria>\n                </ShoppingCriteria>\n            </Request>\n        </IATA_AirShoppingRQ>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {}
              }
            },
            "url": "{{BaseURL}}{{Context182}}{{AirShopping}}{{APIVersion1}}",
            "description": "AirShopping - Generic - 18.2 version\nReturn Type\nMix Pax: 2ADT + 2CHD"
          },
          "response": [
            {
              "id": "ea629cdf-539c-42d4-9ae4-ea13358ede9e",
              "name": "TestAirShopping",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/xml"
                  },
                  {
                    "key": "accept",
                    "value": "application/xml"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<?xml version=\"1.0\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n\t<soapenv:Header>\r\n\t</soapenv:Header>\r\n\t<soapenv:Body>\r\n<AirShoppingRQ   xmlns=\"http://www.iata.org/IATA/2015/00/2018.1/AirShoppingRQ\">\r\n            <PayloadAttributes>\r\n                <Version>18.1</Version>\r\n                <PrimaryLangID>en</PrimaryLangID>\r\n            </PayloadAttributes>\r\n            <PointOfSale>\r\n                <Country>\r\n                    <CountryCode>IE</CountryCode>\r\n                </Country>\r\n            </PointOfSale>\r\n            <Party>\r\n                <Sender>\r\n                    <TravelAgency>\r\n                        <AgencyID>IBE</AgencyID>\r\n                        <PseudoCityID>AIR</PseudoCityID>\r\n                    </TravelAgency>\r\n                    <RetailPartner>\r\n                        <RetailPartnerID>\r\n                            CACHETEST\r\n                        </RetailPartnerID>\r\n                    </RetailPartner>\r\n                </Sender>\r\n            </Party>\r\n            <Request>\r\n                <FlightRequest>\r\n                    <OriginDestRequest>\r\n                        <OriginDestID>1</OriginDestID>\r\n                        <ConnectionCriteriaRefID>1</ConnectionCriteriaRefID>\r\n                        <DestArrivalRequest>\r\n                            <IATA_LocationCode>DUB</IATA_LocationCode>\r\n                        </DestArrivalRequest>\r\n                        <OriginDepRequest>\r\n                            <IATA_LocationCode>MAD</IATA_LocationCode>\r\n                            <Date>2019-01-20</Date>\r\n                            <Time>01:30:00:00Z</Time>\r\n                        </OriginDepRequest>\r\n                    </OriginDestRequest>\r\n                    <OriginDestRequest>\r\n                        <OriginDestID>2</OriginDestID>\r\n                        <ConnectionCriteriaRefID>2</ConnectionCriteriaRefID>\r\n                        <DestArrivalRequest>\r\n                            <IATA_LocationCode>MAD</IATA_LocationCode>\r\n                        </DestArrivalRequest>\r\n                        <OriginDepRequest>\r\n                            <IATA_LocationCode>DUB</IATA_LocationCode>\r\n                            <Date>2019-01-27</Date>\r\n                            <Time>00:00:00:00Z</Time>\r\n                        </OriginDepRequest>\r\n                    </OriginDestRequest>\r\n                </FlightRequest>\r\n                <Paxs>\r\n                    <Pax>\r\n                        <PaxID>1</PaxID>\r\n                        <PTC>ADT</PTC>\r\n                    </Pax>\r\n                    <Pax>\r\n                        <PaxID>2</PaxID>\r\n                        <PTC>CHD</PTC>\r\n                    </Pax>\r\n                </Paxs>\r\n                <ResponseParameters>\r\n                    <CurParameter>\r\n                        <CurCode>USD</CurCode>\r\n                    </CurParameter>\r\n                </ResponseParameters>\r\n                <ShoppingCriteria>\r\n                    <CabinTypeCriteria>\r\n                        <CabinTypeCode>3</CabinTypeCode>\r\n                    </CabinTypeCriteria>\r\n                    <ConnectionCriteria>\r\n                        <ConnectionCriteriaID>1</ConnectionCriteriaID>\r\n                        <MaximumConnectionQty>0</MaximumConnectionQty>\r\n                        <StationCriteria/>\r\n                    </ConnectionCriteria>\r\n                    <CarrierCriteria>\r\n                        <Carrier>\r\n                            <AirlineDesigCode>BA</AirlineDesigCode>\r\n                            <DuplicateDesigInd>true</DuplicateDesigInd>\r\n                            <Name>British Airways</Name>\r\n                        </Carrier>\r\n                    </CarrierCriteria>\r\n                </ShoppingCriteria>\r\n            </Request>\r\n        </AirShoppingRQ>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>"
                },
                "url": "localhost:8080/soapwebservices"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "xml",
              "header": [
                {
                  "key": "Accept",
                  "value": "text/xml, text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"
                },
                {
                  "key": "SOAPAction",
                  "value": "\"\""
                },
                {
                  "key": "Content-Type",
                  "value": "text/xml;charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "46367"
                },
                {
                  "key": "Date",
                  "value": "Thu, 13 Dec 2018 14:00:47 GMT"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <sessionid xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">6a39df52-a06e-4da3-845c-0a69e5114107</sessionid>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <ndc:AirShoppingRS xmlns:ndc=\"http://www.iata.org/IATA/2015/00/2018.1/AirShoppingRS\" xmlns=\"\">\n            <ndc:PayloadAttributes>\n                <ndc:Version>18.1</ndc:Version>\n            </ndc:PayloadAttributes>\n            <ndc:Response>\n                <ndc:DataLists>\n                    <ndc:OriginDestList>\n                        <ndc:OriginDest>\n                            <ndc:OriginDestID>OD-1</ndc:OriginDestID>\n                            <ndc:OriginCode>MAD</ndc:OriginCode>\n                            <ndc:DestCode>DUB</ndc:DestCode>\n                            <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                        </ndc:OriginDest>\n                        <ndc:OriginDest>\n                            <ndc:OriginDestID>OD-2</ndc:OriginDestID>\n                            <ndc:OriginCode>DUB</ndc:OriginCode>\n                            <ndc:DestCode>MAD</ndc:DestCode>\n                            <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                        </ndc:OriginDest>\n                    </ndc:OriginDestList>\n                    <ndc:PaxJourneyList>\n                        <ndc:PaxJourney>\n                            <ndc:PaxJourneyID>JOU-1</ndc:PaxJourneyID>\n                            <ndc:PaxSegmentRefID>SEG-1</ndc:PaxSegmentRefID>\n                        </ndc:PaxJourney>\n                        <ndc:PaxJourney>\n                            <ndc:PaxJourneyID>JOU-3</ndc:PaxJourneyID>\n                            <ndc:PaxSegmentRefID>SEG-3</ndc:PaxSegmentRefID>\n                        </ndc:PaxJourney>\n                    </ndc:PaxJourneyList>\n                    <ndc:PaxList>\n                        <ndc:Pax>\n                            <ndc:PaxID>PAX-ADT-1</ndc:PaxID>\n                            <ndc:PTC>ADT</ndc:PTC>\n                        </ndc:Pax>\n                        <ndc:Pax>\n                            <ndc:PaxID>PAX-CHD-1</ndc:PaxID>\n                            <ndc:PTC>CHD</ndc:PTC>\n                        </ndc:Pax>\n                    </ndc:PaxList>\n                    <ndc:PaxSegmentList>\n                        <ndc:PaxSegment>\n                            <ndc:PaxSegmentID>SEG-1</ndc:PaxSegmentID>\n                            <ndc:Duration>PT6H40M</ndc:Duration>\n                            <ndc:CabinType>\n                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                            </ndc:CabinType>\n                            <ndc:Dep>\n                                <ndc:IATA_LocationCode>MAD</ndc:IATA_LocationCode>\n                                <ndc:TerminalName>2</ndc:TerminalName>\n                                <ndc:AircraftScheduledDateTime>2019-01-20T13:20:00</ndc:AircraftScheduledDateTime>\n                            </ndc:Dep>\n                            <ndc:Arrival>\n                                <ndc:IATA_LocationCode>DUB</ndc:IATA_LocationCode>\n                                <ndc:AircraftScheduledDateTime>2019-01-20T20:00:00</ndc:AircraftScheduledDateTime>\n                            </ndc:Arrival>\n                            <ndc:MarketingCarrierInfo>\n                                <ndc:CarrierDesigCode>BA</ndc:CarrierDesigCode>\n                                <ndc:MarketingCarrierFlightNumberText>2931</ndc:MarketingCarrierFlightNumberText>\n                            </ndc:MarketingCarrierInfo>\n                            <ndc:OperatingCarrierInfo>\n                                <ndc:CarrierDesigCode>BA</ndc:CarrierDesigCode>\n                            </ndc:OperatingCarrierInfo>\n                            <ndc:DatedOperatingLeg>\n                                <ndc:DatedOperatingLegID>LEG-1</ndc:DatedOperatingLegID>\n                                <ndc:DistanceMeasure>465</ndc:DistanceMeasure>\n                                <ndc:Dep>\n                                    <ndc:IATA_LocationCode>MAD</ndc:IATA_LocationCode>\n                                    <ndc:TerminalName>2</ndc:TerminalName>\n                                    <ndc:AircraftScheduledDateTime>2019-01-20T13:20:00</ndc:AircraftScheduledDateTime>\n                                </ndc:Dep>\n                                <ndc:Arrival>\n                                    <ndc:IATA_LocationCode>DUB</ndc:IATA_LocationCode>\n                                    <ndc:AircraftScheduledDateTime>2019-01-20T20:00:00</ndc:AircraftScheduledDateTime>\n                                </ndc:Arrival>\n                                <ndc:IATA_AircraftType>\n                                    <ndc:IATA_AircraftTypeCode>320</ndc:IATA_AircraftTypeCode>\n                                </ndc:IATA_AircraftType>\n                            </ndc:DatedOperatingLeg>\n                        </ndc:PaxSegment>\n                        <ndc:PaxSegment>\n                            <ndc:PaxSegmentID>SEG-3</ndc:PaxSegmentID>\n                            <ndc:Duration>PT6H40M</ndc:Duration>\n                            <ndc:CabinType>\n                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                            </ndc:CabinType>\n                            <ndc:Dep>\n                                <ndc:IATA_LocationCode>DUB</ndc:IATA_LocationCode>\n                                <ndc:TerminalName>2</ndc:TerminalName>\n                                <ndc:AircraftScheduledDateTime>2019-01-27T13:20:00</ndc:AircraftScheduledDateTime>\n                            </ndc:Dep>\n                            <ndc:Arrival>\n                                <ndc:IATA_LocationCode>MAD</ndc:IATA_LocationCode>\n                                <ndc:AircraftScheduledDateTime>2019-01-27T20:00:00</ndc:AircraftScheduledDateTime>\n                            </ndc:Arrival>\n                            <ndc:MarketingCarrierInfo>\n                                <ndc:CarrierDesigCode>BA</ndc:CarrierDesigCode>\n                                <ndc:MarketingCarrierFlightNumberText>2932</ndc:MarketingCarrierFlightNumberText>\n                            </ndc:MarketingCarrierInfo>\n                            <ndc:OperatingCarrierInfo>\n                                <ndc:CarrierDesigCode>BA</ndc:CarrierDesigCode>\n                            </ndc:OperatingCarrierInfo>\n                            <ndc:DatedOperatingLeg>\n                                <ndc:DatedOperatingLegID>LEG-3</ndc:DatedOperatingLegID>\n                                <ndc:DistanceMeasure>465</ndc:DistanceMeasure>\n                                <ndc:Dep>\n                                    <ndc:IATA_LocationCode>DUB</ndc:IATA_LocationCode>\n                                    <ndc:TerminalName>2</ndc:TerminalName>\n                                    <ndc:AircraftScheduledDateTime>2019-01-27T13:20:00</ndc:AircraftScheduledDateTime>\n                                </ndc:Dep>\n                                <ndc:Arrival>\n                                    <ndc:IATA_LocationCode>MAD</ndc:IATA_LocationCode>\n                                    <ndc:AircraftScheduledDateTime>2019-01-27T20:00:00</ndc:AircraftScheduledDateTime>\n                                </ndc:Arrival>\n                                <ndc:IATA_AircraftType>\n                                    <ndc:IATA_AircraftTypeCode>320</ndc:IATA_AircraftTypeCode>\n                                </ndc:IATA_AircraftType>\n                            </ndc:DatedOperatingLeg>\n                        </ndc:PaxSegment>\n                    </ndc:PaxSegmentList>\n                    <ndc:PriceClassList>\n                        <ndc:PriceClass>\n                            <ndc:PriceClassID>PC-1</ndc:PriceClassID>\n                            <ndc:Code>ECOPRO</ndc:Code>\n                            <ndc:Name>Economy Promo</ndc:Name>\n                        </ndc:PriceClass>\n                        <ndc:PriceClass>\n                            <ndc:PriceClassID>PC-2</ndc:PriceClassID>\n                            <ndc:Code>ECOBAS</ndc:Code>\n                            <ndc:Name>Economy Basic</ndc:Name>\n                        </ndc:PriceClass>\n                        <ndc:PriceClass>\n                            <ndc:PriceClassID>PC-3</ndc:PriceClassID>\n                            <ndc:Code>ECOFLE</ndc:Code>\n                            <ndc:Name>Economy Flex</ndc:Name>\n                        </ndc:PriceClass>\n                    </ndc:PriceClassList>\n                </ndc:DataLists>\n                <ndc:OffersGroup>\n                    <ndc:CarrierOffers>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-1</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.719Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-1</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">156.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">136.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">112.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">92.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-1</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-7</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-2</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.720Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-2</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">156.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">136.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">112.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">92.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-1</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-8</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-3</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.721Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-3</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">352.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">332.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">308.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">288.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-1</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-9</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-4</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.721Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-4</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">156.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">136.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">112.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">92.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-2</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-7</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-5</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.721Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-5</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">156.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">136.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">112.4</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">92.4</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-2</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-8</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">268.8</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">228.8</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-6</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.721Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-6</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">352.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">332.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">308.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">288.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-2</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-9</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-7</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.722Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-1</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-7</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">352.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">332.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">308.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">288.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>NDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>N</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-3</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-7</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-8</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.722Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-2</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-8</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">352.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">332.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">308.2</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">288.2</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>BDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>B</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-3</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-8</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">660.4</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">620.4</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                        <ndc:Offer>\n                            <ndc:OfferID>OFF-9</ndc:OfferID>\n                            <ndc:OwnerCode>BA</ndc:OwnerCode>\n                            <ndc:OfferExpirationDateTime>2019-01-12T14:00:46.723Z</ndc:OfferExpirationDateTime>\n                            <ndc:JourneyOverview>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                                <ndc:JourneyPriceClass>\n                                    <ndc:PriceClassRefID>PC-3</ndc:PriceClassRefID>\n                                    <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                </ndc:JourneyPriceClass>\n                            </ndc:JourneyOverview>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>ADT</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>ADT</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:PTC_OfferParameters>\n                                <ndc:PTC_PricedCode>CHD</ndc:PTC_PricedCode>\n                                <ndc:PTC_RequestedCode>CHD</ndc:PTC_RequestedCode>\n                                <ndc:RequestedPaxNumber>1</ndc:RequestedPaxNumber>\n                                <ndc:PricedPaxNumber>1</ndc:PricedPaxNumber>\n                            </ndc:PTC_OfferParameters>\n                            <ndc:OfferItem>\n                                <ndc:OfferItemID>OFFIT-FLT-9</ndc:OfferItemID>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-ADT-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">548.0</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">528.0</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:FareDetail>\n                                    <ndc:PassengerRefs>PAX-CHD-1</ndc:PassengerRefs>\n                                    <ndc:Price>\n                                        <ndc:TotalAmount>\n                                            <ndc:SimpleCurrencyPrice Code=\"USD\">504.0</ndc:SimpleCurrencyPrice>\n                                        </ndc:TotalAmount>\n                                        <ndc:BaseAmount Code=\"USD\">484.0</ndc:BaseAmount>\n                                        <ndc:Taxes>\n                                            <ndc:Total Code=\"USD\">20.0</ndc:Total>\n                                            <ndc:Breakdown>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                                <ndc:Tax>\n                                                    <ndc:Amount Code=\"USD\">10.0</ndc:Amount>\n                                                    <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                                </ndc:Tax>\n                                            </ndc:Breakdown>\n                                        </ndc:Taxes>\n                                    </ndc:Price>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QMADDUB</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"DUB\" ON_Point=\"MAD\">1</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                    <ndc:FareComponent>\n                                        <ndc:FareBasis>\n                                            <ndc:FareBasisCode>\n                                                <ndc:Code>QDUBMAD</ndc:Code>\n                                            </ndc:FareBasisCode>\n                                            <ndc:RBD>Q</ndc:RBD>\n                                            <ndc:CabinType>\n                                                <ndc:CabinTypeCode>5</ndc:CabinTypeCode>\n                                                <ndc:CabinTypeName>Economy</ndc:CabinTypeName>\n                                            </ndc:CabinType>\n                                        </ndc:FareBasis>\n                                        <ndc:SegmentRefs OFF_Point=\"MAD\" ON_Point=\"DUB\">3</ndc:SegmentRefs>\n                                    </ndc:FareComponent>\n                                </ndc:FareDetail>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-3</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-1</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Service>\n                                    <ndc:ServiceID>SERV-9</ndc:ServiceID>\n                                    <ndc:PaxRefID>PAX-ADT-1</ndc:PaxRefID>\n                                    <ndc:PaxRefID>PAX-CHD-1</ndc:PaxRefID>\n                                    <ndc:ServiceAssociations>\n                                        <ndc:PaxJourneyRefID>JOU-3</ndc:PaxJourneyRefID>\n                                    </ndc:ServiceAssociations>\n                                </ndc:Service>\n                                <ndc:Price>\n                                    <ndc:TotalAmount CurCode=\"USD\">1052.0</ndc:TotalAmount>\n                                    <ndc:BaseAmount CurCode=\"USD\">1012.0</ndc:BaseAmount>\n                                    <ndc:TaxSummary>\n                                        <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                        <ndc:Tax>\n                                            <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                            <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                        </ndc:Tax>\n                                    </ndc:TaxSummary>\n                                </ndc:Price>\n                            </ndc:OfferItem>\n                            <ndc:TotalPrice>\n                                <ndc:TotalAmount CurCode=\"USD\">1052.0</ndc:TotalAmount>\n                                <ndc:BaseAmount CurCode=\"USD\">1012.0</ndc:BaseAmount>\n                                <ndc:TaxSummary>\n                                    <ndc:TotalTaxAmount CurCode=\"USD\">40.0</ndc:TotalTaxAmount>\n                                    <ndc:Tax>\n                                        <ndc:Amount CurCode=\"USD\">40.0</ndc:Amount>\n                                        <ndc:TaxCode>TESTTAX</ndc:TaxCode>\n                                    </ndc:Tax>\n                                </ndc:TaxSummary>\n                            </ndc:TotalPrice>\n                        </ndc:Offer>\n                    </ndc:CarrierOffers>\n                </ndc:OffersGroup>\n                <ndc:ShoppingResponse>\n                    <ndc:ShoppingResponseID>8aae52be-e702-4605-b1fb-d422adc7b3b7</ndc:ShoppingResponseID>\n                </ndc:ShoppingResponse>\n            </ndc:Response>\n        </ndc:AirShoppingRS>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
            }
          ]
        },
        {
          "name": "SL RW IATA_OfferPrice Cache",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ed9c44db-8297-43ac-be2a-8744a309d22d",
                "exec": [
                  "console.log(\"************************************************************************************\");",
                  "console.log(\"             Test Case Return - ServiceListRQ Cache - 2ADT + 2CHD\");",
                  "console.log(\"                           IATA_OfferPrice - Return \" + pm.variables.get(\"Version\"));",
                  "console.log(\"************************************************************************************\");",
                  "",
                  "console.log(\"FLIGHT: \" + pm.variables.get(\"IATAOrigin\") + \"-\" + pm.variables.get(\"IATADest\") + ' (' + pm.variables.get(\"DepartDate\") + ')| ' + pm.variables.get(\"IATADest\") + '-' + pm.variables.get(\"IATAOrigin\") + ' (' + pm.variables.get(\"ReturnDate\") + ')');",
                  "",
                  "console.log(\"PrimaryLangID: \" + pm.variables.get(\"PrimaryLangID\") + \" | CountryCode: \" + pm.variables.get(\"CountryCode\") + \" | RetailPartnerID: \" + pm.variables.get(\"R_RetailPartnerID\") + \" | Currency: \" + pm.variables.get(\"Currency\") + \" | CabinType: \" + pm.variables.get(\"R_Cabin\") + \" | Carrier Code: \" + pm.variables.get(\"Carrier_OwnerCode\") + \" | Carrier Name: \" + pm.variables.get(\"Carrier_Name\"));",
                  "",
                  "console.log(\" \");",
                  "",
                  "",
                  "//validate the response",
                  "pm.test(\"Response status = 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response not have error\", function() {",
                  "    pm.response.to.not.be.error;",
                  "    pm.response.to.have.body();",
                  "});",
                  "",
                  "// strip the namespace prefixes in the XML response",
                  "var parseString = require('xml2js').parseString;",
                  "var stripPrefix = require('xml2js').processors.stripPrefix;",
                  "",
                  "/*---------------------------------------------------------",
                  "        VALIDATE IF THERE IS AN ERROR IN OUR RESPONSE",
                  "  ---------------------------------------------------------",
                  "*/",
                  "parseString(responseBody, {",
                  "    tagNameProcessors: [stripPrefix]",
                  "}, function(err, js) {",
                  "",
                  "    if (err) throw err;",
                  "",
                  "",
                  "    pm.test(\"Check If Error\", function() {",
                  "",
                  "        var error = \"0\";",
                  "",
                  "        if (_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'], \"Error\"))",
                  "            error = \"1\";",
                  "",
                  "        // storing if there is an error in our response",
                  "        pm.globals.set(\"IATA_OfferPriceRS_Error\", error);",
                  "",
                  "        // Validate if error",
                  "        pm.expect(error).to.eql(\"0\");",
                  "",
                  "    });",
                  "",
                  "    // Printing all the error to console",
                  "    if (_.isEqual(pm.globals.get(\"IATA_OfferPriceRS_Error\"), \"1\")) {",
                  "",
                  "",
                  "        console.log(\"---------------------------- ERRORS ------------------------------\");",
                  "",
                  "        var numError = 1;",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Error, (i) => {",
                  "",
                  "            console.log(\"ERROR NUMBER: \" + numError);",
                  "            console.log(\"  - Code: \" + i.Code['0']);",
                  "            console.log(\"  - DescText: \" + i.DescText['0']);",
                  "            ",
                  "            if (_.has(i, 'LangCode'))",
                  "                console.log(\"  - LangCode: \" + i.LangCode['0']);",
                  "                ",
                  "            if (_.has(i, 'TagText'))",
                  "                console.log(\"  - TagText: \" + i.TagText['0']);",
                  "                ",
                  "            console.log(\"  - TypeCode: \" + i.TypeCode['0']);",
                  "",
                  "        });",
                  "    }",
                  "",
                  "});",
                  "",
                  "",
                  "/*---------------------------------------------------------",
                  "        LOGIC IF THERE IS NO ERROR",
                  "  ---------------------------------------------------------",
                  "*/",
                  "",
                  "if (_.isEqual(pm.globals.get(\"IATA_OfferPriceRS_Error\"), \"0\")) {",
                  "",
                  "    /*---------------------------------------------------------",
                  "        GENERAL INFORMATION",
                  "       ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        //console.log(js, { depth: null });",
                  "",
                  "        console.log(\" ------------------------ OFFERT INFORMATION ------------------------ \");",
                  "",
                  "        //Validating ShoppingResponseID from OfferPriceRS",
                  "        pm.test(\"Check ShoppingResponseRefID exists\", function() {",
                  "",
                  "            var error = \"0\";",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].ShoppingResponse['0'], \"ShoppingResponseID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_OfferPriceRS_ShoppingResponseRefID from OfferPriceRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "                //setting a global variable for ShoppingResponseID from OfferPriceRS",
                  "                pm.globals.set(\"One_IATA_OfferPriceRS_ShoppingResponseRefID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].ShoppingResponse['0'].ShoppingResponseID);",
                  "",
                  "                //printing to console ShoppingResponseID from OfferPriceRS",
                  "                console.log(\"One_ShoppingResponseRefID from IATA_OfferPriceRS: \" + pm.variables.get(\"One_IATA_OfferPriceRS_ShoppingResponseRefID\"));",
                  "            }",
                  "",
                  "            //printing the global variable for ShoppingResponseID from AirShoppingRS to console",
                  "            console.log(\"    -- One_ShoppingResponseID from IATA_AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_ShoppingResponseRefID\"));",
                  "",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        //Validating OfferID from OfferPriceRS",
                  "        pm.test(\"Check OfferID exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'], \"OfferID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_OfferPriceRS_OfferID from OfferPriceRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OfferID from OfferPriceRS ",
                  "                pm.globals.set(\"One_IATA_OfferPriceRS_OfferID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferID);",
                  "",
                  "                //printing the global variable for OfferID from OfferPriceRS to console",
                  "                console.log(\"One_OfferID from IATA_OfferPriceRS: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\"));",
                  "            }",
                  "",
                  "            //printing the global variable for OfferID from AirShoppingRS to console",
                  "            console.log(\"    -- One_OfferID from IATA_AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        pm.test(\"Check OfferID - Format is right\", function() {",
                  "",
                  "            error = \"1\";",
                  "",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'], \"OfferID\")) {",
                  "",
                  "                pm.expect(String(pm.globals.get(\"One_IATA_OfferPriceRS_OfferID\")).substring(0, 4)).to.contains(\"OFF-\");",
                  "            }",
                  "",
                  "",
                  "        });",
                  "",
                  "        //Validating OfferItemID from OfferPriceRS",
                  "        pm.test(\"Check OfferItemID exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferItem['0'], \"OfferItemID\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_OfferPriceRS_OfferItemID from OfferPriceRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OfferItemID from OfferPriceRS",
                  "                pm.globals.set(\"One_IATA_OfferPriceRS_OfferItemID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferItem['0'].OfferItemID);",
                  "",
                  "                //printing to console OfferItemID from OfferPriceRS",
                  "                console.log(\"One_OfferItemID from IATA_OfferPriceRS: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferItemID\"));",
                  "            }",
                  "",
                  "            //printing the global variable for OfferItemID from AirShoppingRS to console",
                  "            console.log(\"    -- OfferItemID from IATA_AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferItemID\"));",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "        ",
                  "        //Validating OwnerCode from OfferPriceRS",
                  "        pm.test(\"Check OwnerCode exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (!_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'], \"OwnerCode\")) {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"One_IATA_OfferPriceRS_OwnerCode from OfferPriceRS: <Not Value Found>\");",
                  "",
                  "            } else {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for OwnerCode from OfferPriceRS",
                  "                pm.globals.set(\"One_IATA_OfferPriceRS_OwnerCode\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OwnerCode['0']);",
                  "",
                  "                //printing to console OwnerCode from OfferPriceRS",
                  "                console.log(\"One_OwnerCode from IATA_OfferPriceRS: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OwnerCode\"));",
                  "            }",
                  "",
                  "            //printing the global variable for OwnerCode from AirShoppingRS to console",
                  "            console.log(\"    -- OwnerCode from IATA_AirShoppingRS: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OwnerCode\"));",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        console.log(\" \");",
                  "        console.log(\" ---------------------- PAX JOURNEY INFORMATION --------------------- \");",
                  "",
                  "        var numJourneis = _.size(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].PaxJourneyRefID);",
                  "",
                  "        var selJourney = _.random(numJourneis - 1);",
                  "        var enc = 0,",
                  "            i = 0,",
                  "            pos;",
                  "        var selectedJourney = js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest['0'].PaxJourneyRefID[selJourney];",
                  "",
                  "        // Searching fo PaxJourney selected in first Origin Destination",
                  "        while (enc === 0 && i < numJourneis) {",
                  "",
                  "            if (js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[i].PaxJourneyID == selectedJourney) {",
                  "",
                  "                enc = 1;",
                  "                pos = i;",
                  "",
                  "            } else",
                  "                i++;",
                  "",
                  "        }",
                  "",
                  "",
                  "        //Validating PaxJourneyID from OfferPriceRS",
                  "        pm.test(\"Check PaxJourneyID - Right Format\", function() {",
                  "",
                  "            var error = \"1\";",
                  "",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[pos], \"PaxJourneyID\")) {",
                  "",
                  "                error = \"0\";",
                  "",
                  "                //setting a global variable for PaxJourneyID from OfferPriceRS and printing it",
                  "                pm.globals.set(\"One_IATA_OfferPriceRS_PaxJourneyID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[pos].PaxJourneyID);",
                  "",
                  "                console.log(\"        PaxJourneyID from IATA_OfferPriceRS: \" + pm.variables.get(\"One_IATA_OfferPriceRS_PaxJourneyID\"));",
                  "",
                  "                // Check format",
                  "                pm.expect(String(pm.globals.get(\"One_IATA_OfferPriceRS_PaxJourneyID\")).substring(0, 4)).to.eql(\"JOU-\")",
                  "",
                  "",
                  "            } else {",
                  "",
                  "                console.log(\"One_IATA_OfferPriceRS_PaxJourneyID from OfferPriceRS: <Not Value Found>\");",
                  "",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "",
                  "        //Validating PaxSegmentRefID from OfferPriceRS",
                  "        pm.test(\"Check PaxSegmentRefID - Exists\", function() {",
                  "",
                  "            var error;",
                  "",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[pos], \"PaxSegmentRefID\")) {",
                  "",
                  "                error = \"0\";",
                  "",
                  "            } else {",
                  "",
                  "                error = \"1\";",
                  "",
                  "                console.log(\"PaxSegmentRefID from OfferPriceRS: <Not Tag Found>\");",
                  "",
                  "            }",
                  "",
                  "            pm.expect(error).to.equal(\"0\");",
                  "",
                  "        });",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[pos].PaxSegmentRefID, (i) => {",
                  "",
                  "            // Validate format for PaxSegmentRefID",
                  "            pm.test(\"Check PaxSegmentRefID - Right Format\", function() {",
                  "",
                  "                pm.expect(i.substring(0, 4)).to.eql(\"SEG-\");",
                  "",
                  "            });",
                  "",
                  "            // Printing information to console",
                  "            console.log(\"          - Segment: \" + i + \" for PaxJourneyID \" + pm.globals.get(\"One_IATA_OfferPriceRS_PaxJourneyID\"));",
                  "",
                  "        });",
                  "",
                  "        //setting a global variable for PaxSegmentRefID from OfferPriceRS",
                  "        pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegmentRefID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[pos].PaxSegmentRefID);",
                  "",
                  "        console.log(\" \");",
                  "        console.log(\" ------------------------- PRICE INFORMATION ------------------------ \");",
                  "",
                  "        //printing to console TotalAmountPassenger from OfferPriceRS",
                  "        pm.globals.set(\"One_IATA_OfferPriceRS_TotalAmountPassenger\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferItem['0'].Price['0'].TotalAmount['0']._);",
                  "",
                  "        console.log(\"One_IATA_OfferPriceRS_TotalAmountPassenger: \" + pm.globals.get(\"One_IATA_OfferPriceRS_TotalAmountPassenger\"));",
                  "",
                  "        console.log(\"    -- TotalAmountPassenger from AirShoppingRS: \" + pm.globals.get(\"One_AirShoppingRS_TotalAmount\"));",
                  "",
                  "        //printing to console TotalAmountPassenger from OfferPriceRS",
                  "        pm.globals.set(\"One_IATA_OfferPriceRS_BaseAmountPassenger\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferItem['0'].Price['0'].BaseAmount['0']._);",
                  "",
                  "        console.log(\"One_IATA_OfferPriceRS_BaseAmountPassenger: \" + pm.globals.get(\"One_IATA_OfferPriceRS_BaseAmountPassenger\"));",
                  "",
                  "        console.log(\"    -- BaseAmountPassenger from AirShoppingRS: \" + pm.globals.get(\"One_AirShoppingRS_BaseAmount\"));",
                  "",
                  "        console.log(\" \");",
                  "",
                  "",
                  "    });",
                  "",
                  "    /*---------------------------------------------------------",
                  "        OFFERT ITEM INFORMATION",
                  "       ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        // Displaying the expiration date time",
                  "        console.log(\"Expiration Date: \" + js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferExpirationDateTime['0']);",
                  "",
                  "        console.log(\"-------------------- OFFER ITEMS --------------------\");",
                  "",
                  "        var index = 1;",
                  "        var num = 0;",
                  "        var enc = 0;",
                  "        var pos = 0;",
                  "",
                  "        // loop to show all the prices",
                  "        _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferItem, (i) => {",
                  "",
                  "            // displaying offerItemID",
                  "            console.log(\"OfferItem \" + index + \": \" + i.OfferItemID);",
                  "",
                  "            console.log(\"      ------------- OFFERT PRICES --------------      \");",
                  "",
                  "            pm.test(\"Check If BaseAmount\", function() {",
                  "",
                  "                var error = \"1\";",
                  "",
                  "                if (_.has(i, \"Price\")) {",
                  "",
                  "                    if (_.has(i.Price['0'], \"BaseAmount\")) {",
                  "                        error = \"0\";",
                  "",
                  "                        // printing base amount per offer item to console",
                  "                        console.log(\"  * Base Amount per passenger: \" + i.Price['0'].BaseAmount['0']._ + \" \" + i.Price['0'].BaseAmount['0'].$.CurCode);",
                  "                    }",
                  "",
                  "                }",
                  "",
                  "                if (error == \"1\")",
                  "                    if (_.includes(i.OfferItemID, \"OFFIT-SSR-\"))",
                  "                        error = \"0\";",
                  "",
                  "                    // Validate if error",
                  "                pm.expect(error).to.eql(\"0\");",
                  "",
                  "            });",
                  "",
                  "            pm.test(\"Check If TotalAmount\", function() {",
                  "",
                  "                var error = \"1\";",
                  "",
                  "                if (_.has(i, \"Price\")) {",
                  "                    if (_.has(i.Price['0'], \"TotalAmount\")) {",
                  "                        error = \"0\";",
                  "",
                  "                        // printing total amount per offer item to console",
                  "                        console.log(\"  * Total Amount per passenger: \" + i.Price['0'].TotalAmount['0']._ + \" \" + i.Price['0'].TotalAmount['0'].$.CurCode);",
                  "",
                  "                        // Storing total amount per offert item",
                  "                        pm.globals.set(\"IATA_OfferPriceRS_TotalAmountPassenger\", i.Price['0'].TotalAmount['0']._);",
                  "                    }",
                  "",
                  "                }",
                  "",
                  "                if (error == \"1\")",
                  "                    if (_.includes(i.OfferItemID, \"OFFIT-SSR-\"))",
                  "                        error = '0';",
                  "",
                  "                    // Validate if error",
                  "                pm.expect(error).to.eql(\"0\");",
                  "",
                  "            });",
                  "",
                  "            if (_.has(i.Price['0'], \"Surcharge\")) {",
                  "",
                  "                console.log(\"      --------------- BREAKDOWNs ---------------      \");",
                  "",
                  "                num = 1;",
                  "",
                  "                _.each(i.Price['0'].Surcharge['0'].Breakdown, (j) => {",
                  "",
                  "                    console.log(\"Breakdown \" + num);",
                  "                    console.log(\"  - Amount: \" + j.Amount['0']._ + \" \" + j.Amount['0'].$.CurCode);",
                  "                    console.log(\"  - DescText: \" + j.DescText['0']);",
                  "                    console.log(\"  - DesigText: \" + j.DesigText['0']);",
                  "",
                  "                    num++;",
                  "",
                  "                });",
                  "            }",
                  "",
                  "            if (_.has(i.Price['0'], \"TaxSummary\")) {",
                  "",
                  "",
                  "                console.log(\"      --------------- TAX SUMMARY --------------      \");",
                  "",
                  "                pm.test(\"Check If TaxSummary / TotalAmount\", function() {",
                  "",
                  "                    var error = \"1\";",
                  "",
                  "                    if (_.has(i.Price['0'].TaxSummary['0'], \"TotalTaxAmount\")) {",
                  "",
                  "                        error = \"0\";",
                  "",
                  "                        // printing total amount per tax sumary to console",
                  "                        console.log(\"  * Total Amount per Tax Summary: \" + i.Price['0'].TaxSummary['0'].TotalTaxAmount['0']._ + \" \" + i.Price['0'].TaxSummary['0'].TotalTaxAmount['0'].$.CurCode);",
                  "",
                  "                    }",
                  "",
                  "                    // Validate if error",
                  "                    pm.expect(error).to.eql(\"0\");",
                  "",
                  "                });",
                  "",
                  "",
                  "                console.log(\"          ------------ TAXES LIST ----------          \");",
                  "                num = 1;",
                  "",
                  "                _.each(i.Price['0'].TaxSummary['0'].Tax, (j) => {",
                  "",
                  "                    console.log(\"Tax \" + num);",
                  "                    console.log(\"  - Amount: \" + j.Amount['0']._ + \" \" + j.Amount['0'].$.CurCode);",
                  "",
                  "                    num++;",
                  "",
                  "                });",
                  "            }",
                  "",
                  "            if (_.has(i, \"FareDetail\")) {",
                  "",
                  "                console.log(\" \");",
                  "                console.log(\"      --------------- FARE DETAIL --------------      \");",
                  "",
                  "                _.each(i.FareDetail, (j) => {",
                  "",
                  "                    console.log(\"  PaxRefID: \" + j.PaxRefID);",
                  "",
                  "                    console.log(\" \");",
                  "",
                  "                    if (_.has(j, \"FareComponent\")) {",
                  "",
                  "                        num = 1;",
                  "",
                  "                        _.each(j.FareComponent, (x) => {",
                  "",
                  "                            console.log(\"Fare Component \" + num);",
                  "",
                  "                            console.log(\" Cabin type: \" + x.CabinType['0'].CabinTypeCode['0'] + \" - \" + x.CabinType['0'].CabinTypeName['0']);",
                  "",
                  "                            console.log(\" Fare basis code: \" + x.FareBasisCode['0']);",
                  "",
                  "                            console.log(\" Pax segment ref: \" + x.PaxSegmentRefID['0']);",
                  "",
                  "                            console.log(\" \");",
                  "",
                  "                            num++;",
                  "                        });",
                  "",
                  "                    }",
                  "                });",
                  "            }",
                  "",
                  "            console.log(\" \");",
                  "",
                  "            // Inc num offert items",
                  "            index++;",
                  "",
                  "        });",
                  "",
                  "    });",
                  "",
                  "",
                  "    /*---------------------------------------------------------",
                  "        PAX SEGMENT LIST INFORMATION",
                  "       ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        // Displaying the expiration date time",
                  "        console.log(\"Expiration Date: \" + js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].PricedOffer['0'].OfferExpirationDateTime['0']);",
                  "",
                  "        console.log(\"------------------ PAX SEGMENT LIST -----------------\");",
                  "",
                  "        var index = 1;",
                  "",
                  "        // loop to show all the segments",
                  "        _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxSegmentList['0'].PaxSegment, (i) => {",
                  "",
                  "            console.log(\"    ---------- PAX SEGMENT \" + index + \" ---------   \");",
                  "",
                  "            console.log(\" *** Arrival *** \");",
                  "",
                  "            //setting in a global variable Arrival / AircraftScheduledDateTime from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_Ar_AircraftScheduledDateTime\", i.Arrival['0'].AircraftScheduledDateTime['0']);",
                  "",
                  "            // Arrival / AircraftScheduledDateTime from OfferPriceRS",
                  "            console.log(\"AircraftScheduledDateTime: \" + i.Arrival['0'].AircraftScheduledDateTime['0']);",
                  "",
                  "            //setting in a global variable Arrival / IATALocationCode from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_Ar_IATALocationCode\", i.Arrival['0'].IATALocationCode['0']);",
                  "",
                  "            // Arrival / IATALocationCode from OfferPriceRS",
                  "            console.log(\"IATALocationCode: \" + i.Arrival['0'].IATALocationCode['0']);",
                  "",
                  "            // CabinType",
                  "            pm.test(\"Check CabinTypeCode in PaxSegment\", function() {",
                  "",
                  "                var enc = 0;",
                  "",
                  "                if (_.has(i, \"CabinType\")) {",
                  "                    if (_.has(i.CabinType['0'], \"CabinTypeCode\")) {",
                  "",
                  "                        enc = 1;",
                  "",
                  "                        // CabinTypeCode from OfferPriceRS",
                  "                        console.log(\"Cabin type: \" + i.CabinType['0'].CabinTypeCode['0']);",
                  "",
                  "                        //setting in a global variable CabinType / CabinTypeCode from OfferPriceRS",
                  "                        pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_CabinTypeCode\", i.CabinType['0'].CabinTypeCode['0']);",
                  "",
                  "",
                  "                    } else",
                  "                        console.log(\"CabinTypeCode: <Value Not Found>\");",
                  "",
                  "                } else",
                  "                    console.log(\"CabinType: <Value Not Found>\");",
                  "            });",
                  "",
                  "            console.log(\" *** Dep *** \");",
                  "",
                  "            //setting in a global variable Dep / AircraftScheduledDateTime from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_Dep_AircraftScheduledDateTime\", i.Dep['0'].AircraftScheduledDateTime['0']);",
                  "",
                  "            // Dep / AircraftScheduledDateTime from OfferPriceRS",
                  "            console.log(\"AircraftScheduledDateTime: \" + i.Dep['0'].AircraftScheduledDateTime['0']);",
                  "",
                  "            //setting in a global variable Dep / IATALocationCode from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_Dep_IATALocationCode\", i.Dep['0'].IATALocationCode['0']);",
                  "",
                  "            // Dep / IATALocationCode from OfferPriceRS",
                  "            console.log(\"IATALocationCode: \" + i.Dep['0'].IATALocationCode['0']);",
                  "",
                  "            console.log(\" *** Duration *** \");",
                  "",
                  "            //setting in a global variable Duration from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_Duration\", i.Duration['0']);",
                  "",
                  "            // Duration from OfferPriceRS",
                  "            console.log(\"Duration: \" + i.Duration['0']);",
                  "",
                  "            console.log(\" *** Marketing Carrier Info *** \");",
                  "",
                  "            //setting in a global variable MarketingCarrierInfo / CarrierDesigCode from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_MCI_CarrierDesigCode\", i.MarketingCarrierInfo['0'].CarrierDesigCode['0']);",
                  "",
                  "            // MarketingCarrierInfo / CarrierDesigCode from OfferPriceRS",
                  "            console.log(\"CarrierDesigCode: \" + i.MarketingCarrierInfo['0'].CarrierDesigCode['0']);",
                  "",
                  "            //setting in a global variable MarketingCarrierInfo / MarketingCarrierFlightNumberText from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_MCI_MCFlightNumberText\", i.MarketingCarrierInfo['0'].MarketingCarrierFlightNumberText['0']);",
                  "",
                  "            // MarketingCarrierInfo / MarketingCarrierFlightNumberText from OfferPriceRS",
                  "            console.log(\"MarketingCarrierFlightNumberText: \" + i.MarketingCarrierInfo['0'].MarketingCarrierFlightNumberText['0']);",
                  "",
                  "            //setting in a global variable MarketingCarrierInfo / RBDCode from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_MCI_RBDCode\", i.MarketingCarrierInfo['0'].RBDCode['0']);",
                  "",
                  "            // MarketingCarrierInfo / RBDCode from OfferPriceRS",
                  "            console.log(\"RBDCode: \" + i.MarketingCarrierInfo['0'].RBDCode['0']);",
                  "",
                  "            console.log(\" *** Operating Carrier Info *** \");",
                  "",
                  "            //setting in a global variable OperatingCarrierInfo / CarrierDesigCode from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_OCI_CarrierDesigCode\", i.OperatingCarrierInfo['0'].CarrierDesigCode['0']);",
                  "",
                  "            // OperatingCarrierInfo / CarrierDesigCode from OfferPriceRS",
                  "            console.log(\"CarrierDesigCode: \" + i.OperatingCarrierInfo['0'].CarrierDesigCode['0']);",
                  "",
                  "            console.log(\" *** Pax Segment ID *** \");",
                  "",
                  "            //setting in a global variable PaxSegmentID from OfferPriceRS",
                  "            pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegmentID\", i.PaxSegmentID['0']);",
                  "",
                  "            // PaxSegmentID from OfferPriceRS",
                  "            console.log(\"PaxSegmentID: \" + i.PaxSegmentID['0']);",
                  "",
                  "            console.log(\" \");",
                  "",
                  "            index++;",
                  "        });",
                  "",
                  "",
                  "        // Search for PaxJourneyID",
                  "        var enc = 0;",
                  "        index = 0;",
                  "        var numJourneis = _.size(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney);",
                  "        var numPax = 0,",
                  "            i = 0;",
                  "",
                  "        while (enc === 0 && index < numJourneis) {",
                  "",
                  "            i = 0;",
                  "            numPax = _.size(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[index].PaxSegmentRefID);",
                  "",
                  "            while (enc === 0 && i < numPax) {",
                  "",
                  "                if (pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegmentID\") == js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[index].PaxSegmentRefID[i]) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\" *** PaxJourney *** \");",
                  "",
                  "                    //setting in a global variable PaxJourney from OfferPriceRS",
                  "                    pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_PaxJourney\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxJourneyList['0'].PaxJourney[index].PaxJourneyID['0']);",
                  "",
                  "                    //printing to console PaxJourney from OfferPriceRS",
                  "                    console.log(\"PaxJourneyID: \" + pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegment_PaxJourney\"));",
                  "",
                  "                    console.log(\" \");",
                  "",
                  "                }",
                  "",
                  "                i++;",
                  "            }",
                  "",
                  "            index++;",
                  "        }",
                  "",
                  "",
                  "        // Search for OD",
                  "        enc = 0;",
                  "        index = 0;",
                  "        var numODs = _.size(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest);",
                  "        i = 0;",
                  "",
                  "        while (enc === 0 && index < numODs) {",
                  "",
                  "            i = 0;",
                  "            numJourneis = _.size(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest[index].PaxJourneyRefID);",
                  "",
                  "",
                  "            while (enc === 0 && i < numJourneis) {",
                  "",
                  "",
                  "                if (pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegment_PaxJourney\") == js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest[index].PaxJourneyRefID[i]) {",
                  "",
                  "                    enc = 1;",
                  "",
                  "                    console.log(\" *** Origin-Destination *** \");",
                  "",
                  "                    //setting in a global variable OriginCode from OfferPriceRS",
                  "                    pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_OriginCode\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest[index].OriginCode['0']);",
                  "",
                  "                    //printing to console Origincode from OfferPriceRS",
                  "                    console.log(\"Origin Code: \" + pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegment_OriginCode\"));",
                  "",
                  "                    //setting in a global variable DestCode from OfferPriceRS",
                  "                    pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_DestCode\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest[index].DestCode['0']);",
                  "",
                  "                    //printing to console DestCode from OfferPriceRS",
                  "                    console.log(\"Dest Code: \" + pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegment_DestCode\"));",
                  "",
                  "                    //setting in a global variable OriginDestID from OfferPriceRS",
                  "                    pm.globals.set(\"One_IATA_OfferPriceRS_PaxSegment_OriginDestID\", js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].OriginDestList['0'].OriginDest[index].OriginDestID['0']);",
                  "",
                  "                    //printing to console OriginDestID from OfferPriceRS",
                  "                    console.log(\"OriginDestID: \" + pm.globals.get(\"One_IATA_OfferPriceRS_PaxSegment_OriginDestID\"));",
                  "",
                  "                }",
                  "",
                  "                i++;",
                  "            }",
                  "",
                  "            index++;",
                  "        }",
                  "    });",
                  "",
                  "",
                  "    /*---------------------------------------------------------",
                  "        PAX LIST",
                  "       ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        //console.log(js, { depth: null });",
                  "",
                  "        console.log(\" \");",
                  "        console.log(\" ----------------------------- PAX LIST ----------------------------- \");",
                  "",
                  "        var numPass = 1;",
                  "",
                  "",
                  "        _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].DataLists['0'].PaxList['0'].Pax, (i) => {",
                  "",
                  "",
                  "            //Validating Pax.PaxID from OfferPriceRS",
                  "            pm.test(\"Check if PaxID has the right format\", function() {",
                  "",
                  "                pm.expect(i.PaxID['0'].substring(0, 4)).to.eql(\"PAX-\");",
                  "                pm.expect(_.parseInt(i.PaxID['0'].substring(4, 5))).to.be.a(\"number\");",
                  "            });",
                  "",
                  "            // printing information to console",
                  "            console.log(\"      Passenger \" + numPass + \" - PaxID: \" + i.PaxID['0']);",
                  "            console.log(\"      Passenger \" + numPass + \" - PTC: \" + i.PTC['0']);",
                  "            console.log(\" \");",
                  "",
                  "",
                  "            switch (numPass) {",
                  "                    case 1: // setting a global variable for PaxID / PTC from OfferPriceRS (first adult)",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PaxID1\", i.PaxID['0']);",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PTC1\", i.PTC['0']);",
                  "                            ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Adult PaxRefID is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PaxID['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PaxID1')));",
                  "                            });",
                  "                            ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Adult PTC is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PTC['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PTC1')));",
                  "                            });",
                  "                            ",
                  "                            break;",
                  "",
                  "                    case 2: // setting a global variable for PaxID / PTC from OfferPriceRS (first child)",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PaxID2\", i.PaxID['0']);",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PTC2\", i.PTC['0']);",
                  "                        ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PaxRefID is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PaxID['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PaxID2')));",
                  "                            });",
                  "                            ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PTC is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PTC['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PTC2')));",
                  "                            });",
                  "                            ",
                  "                            break;",
                  "                            ",
                  "                    case 3: // setting a global variable for PaxID / PTC from OfferPriceRS (first child)",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PaxID3\", i.PaxID['0']);",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PTC3\", i.PTC['0']);",
                  "                        ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PaxRefID is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PaxID['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PaxID3')));",
                  "                            });",
                  "                            ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PTC is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PTC['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PTC3')));",
                  "                            });",
                  "                            ",
                  "                            break;",
                  "                            ",
                  "                            case 4: // setting a global variable for PaxID / PTC from OfferPriceRS (first child)",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PaxID4\", i.PaxID['0']);",
                  "                            pm.globals.set(\"One_IATA_OfferPriceRS_PTC4\", i.PTC['0']);",
                  "                        ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PaxRefID is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PaxID['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PaxID4')));",
                  "                            });",
                  "                            ",
                  "                            //Validating Pax.PaxRefID from OfferPriceRS",
                  "                            pm.test(\"Check if Child PTC is the same in RQ/RS\", function() {",
                  "",
                  "                                pm.expect(i.PTC['0']).to.eql(String(pm.globals.get('One_IATA_AirShoppingRS_PTC4')));",
                  "                            });",
                  "                            ",
                  "                            break;   ",
                  "                        ",
                  "                    default:",
                  "                            console.log(\"There is no more passengers\");",
                  "                            break;",
                  "            }",
                  "",
                  "",
                  "",
                  "            numPass++;",
                  "",
                  "        });",
                  "",
                  "",
                  "    });",
                  "",
                  "    /*---------------------------------------------------------",
                  "        GENERAL ASSERTIONS",
                  "       ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {",
                  "        tagNameProcessors: [stripPrefix]",
                  "    }, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "",
                  "        // Display if has warning",
                  "        if (_.has(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'], \"Warning\")) {",
                  "",
                  "            console.log(\"------------------------ Warning ------------------------\");",
                  "",
                  "            _.each(js.Envelope.Body['0'].IATA_OfferPriceRS['0'].Response['0'].Warning, (b) => {",
                  "",
                  "                pm.globals.set(\"WarningCode\", b.Code);",
                  "                pm.globals.set(\"WarningDescText\", b.DescText);",
                  "                pm.globals.set(\"WarningTypeCode\", b.TypeCode);",
                  "",
                  "                // printing values to console",
                  "                console.log(\"Warning Code: \" + pm.variables.get(\"WarningCode\"));",
                  "                console.log(\"Warning DescText: \" + pm.variables.get(\"WarningDescText\"));",
                  "                console.log(\"Warning TypeCode: \" + pm.variables.get(\"WarningTypeCode\"));",
                  "                console.log(\" \");",
                  "",
                  "            });",
                  "",
                  "",
                  "            //Testing if OfferID is consistent from AirShopping RS to OfferPriceRS",
                  "            pm.test(\"Check OfferID Different from the Request\", function() {",
                  "                pm.expect(pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\")).not.to.eql(pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "",
                  "            });",
                  "",
                  "            console.log(\"One_IATA_OfferPriceRS_OfferID: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\"));",
                  "",
                  "            //printing R_IATA_AirShoppingRS_OfferID from AirShopping",
                  "            console.log(\"   *One_IATA_AirShoppingRS_OfferID*: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "",
                  "        } else {",
                  "",
                  "            //Testing if OfferID is consistent from AirShopping RS to OfferPriceRS",
                  "            pm.test(\"Check OfferID is the same from the Request\", function() {",
                  "                pm.expect(pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\")).to.eql(pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "",
                  "",
                  "            });",
                  "",
                  "            console.log(\"One_IATA_OfferPriceRS_OfferID: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\"));",
                  "",
                  "            //printing Cal_IATA_AirShoppingRS_OfferID from AirShopping",
                  "            console.log(\"   *One_IATA_AirShoppingRS_OfferID*: \" + pm.variables.get(\"One_IATA_AirShoppingRS_OfferID\"));",
                  "        }",
                  "        ",
                  "        console.log(' ');",
                  "    });",
                  "",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d72ddeb9-636d-400b-a3eb-07ce47872193",
                "exec": [
                  "// ANA FF\r",
                  "pm.variables.set(\"R_RetailPartnerID\", \"NDC03GBP\");\r",
                  "// pm.variables.set(\"R_RetailPartnerID\", \"TRAVELFUSION\");\r",
                  "pm.variables.set(\"CountryCode\", \"GB\");\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "cb284a7d-2500-43d6-bf81-b7f37bcad9b7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{wso2_app_access_token_182}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "text/xml"
              },
              {
                "key": "accept",
                "value": "application/xml"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<?xml version=\"1.0\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <IATA_OfferPriceRQ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.iata.org/IATA/2015/00/2018.2/IATA_OfferPriceRQ\" xmlns=\"http://www.iata.org/IATA/2015/00/2018.2/IATA_OfferPriceRQ\">\n            <Party>\n                <Sender>\n                    <RetailPartner>\n                        <RetailPartnerID>{{R_RetailPartnerID}}</RetailPartnerID>\n                    </RetailPartner>\n                </Sender>\n            </Party>\n            <PayloadAttributes>\n                <AltLangID>en</AltLangID>\n                <EchoTokenText>EchoTokenTestValue</EchoTokenText>\n                <PrimaryLangID>{{PrimaryLangID}}</PrimaryLangID>\n                <RetransmissionInd>true</RetransmissionInd>\n                <SeqNumber>12345</SeqNumber>\n                <Timestamp>2019-03-01T00:00:00</Timestamp>\n                <TrxStatusCode>1234</TrxStatusCode>\n                <VersionNumber>{{Version}}</VersionNumber>\n            </PayloadAttributes>\n            <PointOfSale>\n                <Country>\n                    <CountryCode>{{CountryCode}}</CountryCode>\n                </Country>\n            </PointOfSale>\n            <Request>\n                <DataLists>\n                    <PaxList>\n                        <Pax>\n                            <AgeMeasure>30</AgeMeasure>\n                            <PaxID>{{One_IATA_AirShoppingRS_PaxID1}}</PaxID>\n                            <PTC>{{One_IATA_AirShoppingRS_PTC1}}</PTC>\n                        </Pax>\n                        <Pax>\n                            <AgeMeasure>6</AgeMeasure>\n                            <PaxID>{{One_IATA_AirShoppingRS_PaxID2}}</PaxID>\n                            <PTC>CHD</PTC>\n                        </Pax>\n                    </PaxList>\n                </DataLists>\n                <OfferPriceParameters>\n                    <CurParameter>\n                        <CurCode>{{Currency}}</CurCode>\n                    </CurParameter>\n                </OfferPriceParameters>\n                <PricedOffer>\n                    <SelectedOffer>\n                        <OfferRefID>{{One_IATA_AirShoppingRS_OfferID}}</OfferRefID>\n                        <OwnerCode>{{One_IATA_AirShoppingRS_OwnerCode}}</OwnerCode>\n                        <SelectedOfferItem>\n                            <OfferItemRefID>{{One_IATA_AirShoppingRS_OfferItemID}}</OfferItemRefID>\n                            <PaxRefID>{{One_IATA_AirShoppingRS_PaxID1}}</PaxRefID>\n                            <PaxRefID>{{One_IATA_AirShoppingRS_PaxID2}}</PaxRefID>\n                        </SelectedOfferItem>\n                        <ShoppingResponseRefID>{{One_IATA_AirShoppingRS_ShoppingResponseRefID}}</ShoppingResponseRefID>\n                    </SelectedOffer>\n                </PricedOffer>\n            </Request>\n        </IATA_OfferPriceRQ>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {}
              }
            },
            "url": "{{BaseURL}}{{Context182}}{{OfferPrice}}{{APIVersion1}}",
            "description": "OfferPrice - Generic - 18.2 version\nReturn Type\nMix Pax: 2ADT + 2CHD"
          },
          "response": []
        },
        {
          "name": "SL RW IATA_OrderCreate - Flight",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb162794-fb9d-4bab-bfc7-937bffcba4d0",
                "exec": [
                  "//printing to console",
                  "console.log(\"************************************************************************************\");",
                  "console.log(\"             Test Case OneWay - ServiceListRQ Cache - 2ADT + 2CHD\");",
                  "console.log(\"                          IATA_OrderCreate - OneWay \" + pm.variables.get(\"Version\"));",
                  "console.log(\"************************************************************************************\");",
                  "",
                  "console.log(\"FLIGHT \" + pm.variables.get(\"IATAOrigin\") + \" to \" + pm.variables.get(\"IATADest\") + \" on \" + pm.variables.get(\"DepartDate\"));",
                  "",
                  "console.log(\"PrimaryLangID: \" + pm.variables.get(\"PrimaryLangID\") + \" | CountryCode: \" + pm.variables.get(\"CountryCode\") + \" | RetailPartnerID: \" + pm.variables.get(\"R_RetailPartnerID\") + \" | Currency: \" + pm.variables.get(\"Currency\") + \" | CabinType: \" + pm.variables.get(\"R_Cabin\") + \" | Carrier Code: \" + pm.variables.get(\"Carrier_OwnerCode\") + \" | Carrier Name: \" + pm.variables.get(\"Carrier_Name\"));",
                  "",
                  "console.log(\" \");",
                  "",
                  "//validate the response",
                  "pm.test(\"Response status = 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "",
                  "});",
                  "",
                  "pm.test(\"Response not have error\", function() {",
                  "    pm.response.to.not.be.error;",
                  "    pm.response.to.have.body();",
                  "    pm.response.to.not.have.body('error');",
                  "});",
                  "",
                  "// Printing Global Variables to check in the console",
                  "",
                  "//INPUT PARAMETERS: PRINTING TO CONSOLE",
                  "console.log(\"----------------------- INPUT PARAMETERS -------------------------\");",
                  "",
                  "console.log(\"     One_IATA_OfferPriceRS_OfferID: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferID\"));",
                  "console.log(\"     One_IATA_AirShoppingRS_OwnerCode: \" + pm.globals.get(\"One_IATA_AirShoppingRS_OwnerCode\"));",
                  "console.log(\"     One_IATA_OfferPriceRS_OfferItemID: \" + pm.variables.get(\"One_IATA_OfferPriceRS_OfferItemID\"));",
                  "console.log(\"     One_IATA_OfferPriceRS_ShoppingResponseRefID: \" + pm.globals.get(\"One_IATA_OfferPriceRS_ShoppingResponseRefID\"));",
                  "console.log(\"     One_IATA_OfferPriceRS_TotalAmountPassenger: \" + pm.globals.get(\"One_IATA_OfferPriceRS_TotalAmountPassenger\"));",
                  "",
                  "console.log(\"   \");",
                  "",
                  "console.log(\"     IATA_ServiceListRQ_OfferID: \" + pm.variables.get(\"IATA_ServiceListRQ_OfferID\"));",
                  "console.log(\"     IATA_ServiceListRQ_OwnerCode: \" + pm.variables.get(\"IATA_ServiceListRQ_OwnerCode\"));",
                  "console.log(\"     IATA_ServiceListRQ_OfferItemID1: \" + pm.variables.get(\"IATA_ServiceListRQ_OfferItemID1\"));",
                  "console.log(\"     IATA_ServiceListRQ_PaxRefID_1: \" + pm.variables.get(\"IATA_ServiceListRQ_PaxRefID_1\"));",
                  "console.log(\"     IATA_ServiceListRQ_ShoppingResponseID: \" + pm.variables.get(\"IATA_ServiceListRQ_ShoppingResponseID\"));",
                  "",
                  "console.log(\"   \");",
                  "",
                  "// strip the namespace prefixes in the XML response",
                  "var parseString = require('xml2js').parseString;",
                  "var stripPrefix = require('xml2js').processors.stripPrefix;",
                  "",
                  "/*---------------------------------------------------------",
                  "        VALIDATE IF THERE IS AN ERROR IN OUR RESPONSE",
                  "  ---------------------------------------------------------",
                  "*/",
                  "parseString(responseBody, {tagNameProcessors: [stripPrefix]}, function(err, js) {",
                  "",
                  "    if (err) throw err;",
                  "",
                  "",
                  "    pm.test(\"Check If Error\", function() {",
                  "",
                  "        var error = \"0\";",
                  "",
                  "        if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'], \"Error\") || _.has(js.Envelope.Body['0'], \"Fault\"))",
                  "            error = \"1\";",
                  "",
                  "        // storing if there is an error in our response",
                  "        pm.globals.set(\"IATA_OrderViewRS_Error\", error);",
                  "",
                  "        // Validate if error",
                  "        pm.expect(error).to.eql(\"0\");",
                  "",
                  "    });",
                  "",
                  "    // Printing all the error to console",
                  "    if (_.isEqual(pm.globals.get(\"IATA_OrderViewRS_Error\"), \"1\")) {",
                  "",
                  "",
                  "        console.log(\"---------------------------- ERRORS ------------------------------\");",
                  "        ",
                  "        if (_.has(js.Envelope.Body['0'], \"Fault\")){",
                  "            ",
                  "            console.log(\"ORDER CREATE FAILED:  \" + js.Envelope.Body['0'].Fault['0'].faultcode['0'] + \" \" + js.Envelope.Body['0'].Fault['0'].faultstring['0']._);",
                  "            ",
                  "        }else{",
                  "",
                  "            var numError = 1;",
                  "",
                  "             _.each(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Error['0'].Error, (i) => {",
                  "",
                  "                console.log(\"ERROR NUMBER: \" + numError);",
                  "",
                  "                pm.test(\"Check Code\", function() {",
                  "",
                  "                    var enc;",
                  "",
                  "                    if (_.has(i, \"Code\")) {",
                  "",
                  "                        enc = 1;",
                  "",
                  "                        console.log(\"  - Code: \" + i.Code['0']);",
                  "",
                  "                    } else {",
                  "",
                  "                        enc = 0;",
                  "",
                  "                        console.log(\"  - Code: <Not Value Found>\");",
                  "                    }",
                  "",
                  "                    pm.expect(enc).to.eql(1);",
                  "",
                  "                });",
                  "                ",
                  "                pm.test(\"Check StatusText\", function() {",
                  "",
                  "                    var enc;",
                  "",
                  "                    if (_.has(i, \"StatusText\")) {",
                  "",
                  "                        enc = 1;",
                  "",
                  "                        console.log(\"  - StatusText: \" + i.StatusText['0']);",
                  "",
                  "                    } else {",
                  "",
                  "                        enc = 0;",
                  "",
                  "                        console.log(\"  - StatusText: <Not Value Found>\");",
                  "                    }",
                  "",
                  "                    pm.expect(enc).to.eql(1);",
                  "",
                  "                });",
                  "",
                  "                pm.test(\"Check DescText\", function() {",
                  "",
                  "                    var enc;",
                  "",
                  "                    if (_.has(i, \"DescText\")) {",
                  "",
                  "                        enc = 1;",
                  "",
                  "                        console.log(\"  - DescText: \" + i.DescText['0']);",
                  "",
                  "                    } else {",
                  "",
                  "                        enc = 0;",
                  "",
                  "                        console.log(\"  - DescText: <Not Value Found>\");",
                  "                    }",
                  "",
                  "                    pm.expect(enc).to.eql(1);",
                  "",
                  "                });",
                  "",
                  "                pm.test(\"Check TypeCode\", function() {",
                  "",
                  "                    var enc;",
                  "",
                  "                    if (_.has(i, \"TypeCode\")) {",
                  "",
                  "                        enc = 1;",
                  "",
                  "                        console.log(\"  - TypeCode: \" + i.TypeCode['0']);",
                  "",
                  "                    } else {",
                  "",
                  "                        enc = 0;",
                  "",
                  "                        console.log(\"  - TypeCode: <Not Value Found>\");",
                  "                    }",
                  "",
                  "                    pm.expect(enc).to.eql(1);",
                  "",
                  "                });",
                  "                ",
                  "                numError ++;",
                  "            ",
                  "                console.log(\" \");",
                  "",
                  "            });",
                  "        }",
                  "    }",
                  "    ",
                  "",
                  "});",
                  "",
                  "if (_.isEqual(pm.globals.get(\"IATA_OrderViewRS_Error\"), \"0\")) {",
                  "    ",
                  "    /*---------------------------------------------------------",
                  "        GENERAL INFORMATION",
                  "     ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {tagNameProcessors: [stripPrefix]}, function(err, js) {",
                  "",
                  "        if (err) throw err;",
                  "    ",
                  "        //console.log(js, {  depth: null});",
                  "",
                  "        // Validating the orderID exist",
                  "        pm.test(\"Validate OrderID\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'], 'OrderID')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for OrderID from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_OrderID\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderID['0']);",
                  "",
                  "                //printing to console OrderID from OrderViewRS",
                  "                console.log(\"OrderID: \" + pm.variables.get(\"One_OrderViewRS_OrderID\"));",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console OrderID from OrderViewRS",
                  "                console.log(\"OrderID: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "        ",
                  "        // Validating the BookingRefID exist",
                  "        pm.test(\"Validate BookingRefID\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].BookingRef['0'], 'BookingID')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for BookingID from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_BookingID\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].BookingRef['0'].BookingID['0']);",
                  "",
                  "                //printing to console OrderID from OrderViewRS",
                  "                console.log(\"BookingID: \" + pm.variables.get(\"One_OrderViewRS_BookingID\"));",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console BookingID from OrderViewRS",
                  "                console.log(\"BookingID: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "",
                  "        // Validating the CreationDateTime exist",
                  "        pm.test(\"Validate CreationDateTime\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'], 'CreationDateTime')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for CreationDateTime from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_OrderItem_CreationDateTime\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].CreationDateTime);",
                  "",
                  "                //printing to console CreationDateTime from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_OrderItem_CreationDateTime: \" + pm.variables.get(\"One_OrderViewRS_OrderItem_CreationDateTime\"));",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console CreationDateTime from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_OrderItem_CreationDateTime: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "        ",
                  "        // Validating the OwnerCode exist",
                  "        pm.test(\"Validate OwnerCode\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'], 'OwnerCode')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for OwnerCode from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_OwnerCode\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].OwnerCode);",
                  "",
                  "                //printing to console OwnerCode from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_OwnerCode: \" + pm.variables.get(\"One_OrderViewRS_OwnerCode\"));",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console OwnerCode from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_OwnerCode: <Not Tag Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "        ",
                  "        pm.test(\"Validate OwnerCode - It has a value\", function() {",
                  "            ",
                  "            var err;",
                  "            var value = String(pm.variables.get(\"One_OrderViewRS_OwnerCode\"));",
                  "            ",
                  "            if (!_.isEmpty(value)){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console OwnerCode from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_OwnerCode: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "        ",
                  "        // Validating the StatusCode exist",
                  "        pm.test(\"Validate StatusCode\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'], 'StatusCode')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for StatusCode from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_StatusCode\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].StatusCode['0']);",
                  "",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console StatusCode from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_StatusCode: <Not Tag Found>\");",
                  "            }",
                  "            ",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "",
                  "",
                  "        //Checking StatusCode from OrderViewRS: pendingBooking",
                  "        var pending;",
                  "        var statusDesc = ' - No Pending Booking';",
                  "",
                  "        pm.test(\"Validate StatusCode if CLOSED Booking\", function() {",
                  "",
                  "            pending = pm.expect(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].StatusCode['0']).to.eql(\"CLOSED\");",
                  "",
                  "        });",
                  "",
                  "        if (pending)",
                  "            statusDesc = ' - Pending Booking';",
                  "        ",
                  "        ",
                  "        //printing to console StatusCode from OrderViewRS",
                  "        console.log(\"One_OrderViewRS_StatusCode: \" + pm.variables.get(\"One_OrderViewRS_StatusCode\") + statusDesc);",
                  "        ",
                  "    });",
                  "",
                  "",
                  "    /*---------------------------------------------------------",
                  "        PRICES INFORMATION",
                  "     ---------------------------------------------------------",
                  "    */",
                  "    parseString(responseBody, {tagNameProcessors: [stripPrefix]}, function(err, js) {",
                  "        ",
                  "        ",
                  "        // Validating the TotalAmount exist",
                  "        pm.test(\"Validate TotalAmount\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'], 'TotalAmount')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for TotalAmount from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_Price_TotalAmount\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'].TotalAmount['0']._);",
                  "",
                  "                //printing to console TotalAmount from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_Price_TotalAmount: \" + pm.variables.get(\"One_OrderViewRS_Price_TotalAmount\") + \" \" + js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'].TotalAmount['0'].$.CurCode);",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console TotalAmount from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_Price_TotalAmount: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "            console.log(\"       * One_IATA_OfferPriceRS_TotalAmountPassenger:* \" + pm.variables.get(\"One_IATA_OfferPriceRS_TotalAmountPassenger\"));",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "        ",
                  "        // Validating the TotalAmount in RQ / RS",
                  "        pm.test(\"Check TotalAmount from OfferPriceRS is the same from OrderViewRS\", function() {",
                  "            ",
                  "            pm.expect(pm.variables.get(\"One_IATA_OfferPriceRS_TotalAmountPassenger\")).to.eql(pm.variables.get(\"One_OrderViewRS_Price_TotalAmount\"));",
                  "            ",
                  "        });",
                  "",
                  "        // Validating the BaseAmount exist",
                  "        pm.test(\"Validate BaseAmount\", function() {",
                  "            ",
                  "            var err;",
                  "            ",
                  "            if (_.has(js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'], 'BaseAmount')){",
                  "                ",
                  "                err = 0;",
                  "                ",
                  "                //setting a global variable for BaseAmount from OrderViewRS",
                  "                pm.globals.set(\"One_OrderViewRS_Price_BaseAmount\", js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'].BaseAmount['0']._);",
                  "",
                  "                //printing to console BaseAmount from OrderViewRS",
                  "               console.log(\"One_OrderViewRS_Price_BaseAmount: \" + pm.variables.get(\"One_OrderViewRS_Price_BaseAmount\") + \" \" + js.Envelope.Body['0'].IATA_OrderViewRS['0'].Response['0'].Order['0'].OrderItem['0'].Price['0'].BaseAmount['0'].$.CurCode);",
                  "                ",
                  "            }else{",
                  "                ",
                  "                err = 1;",
                  "                ",
                  "                //printing to console BaseAmount from OrderViewRS",
                  "                console.log(\"One_OrderViewRS_Price_BaseAmount: <Not Value Found>\");",
                  "            }",
                  "            ",
                  "            console.log(\"       * One_IATA_OfferPriceRS_BaseAmountPassenger:* \" + pm.variables.get(\"One_IATA_OfferPriceRS_BaseAmountPassenger\"));",
                  "",
                  "            pm.expect(err).to.eql(0);",
                  "",
                  "        });",
                  "",
                  "    });",
                  "",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2f9bcef1-3282-47eb-8934-dbfc880c27d0",
                "exec": [
                  "// ANA FF\r",
                  "pm.variables.set(\"R_RetailPartnerID\", \"NDC03GBP\");\r",
                  "pm.variables.set(\"CountryCode\", \"GB\");\r",
                  "pm.variables.set(\"Currency\", \"GBP\");\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "47bdcc7d-b82e-4ea1-a13b-d47cc8e87c60",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{wso2_app_access_token_182}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "text/xml"
              },
              {
                "key": "accept",
                "value": "application/xml"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<?xml version=\"1.0\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <IATA_OrderCreateRQ xmlns=\"http://www.iata.org/IATA/2015/00/2018.2/IATA_OrderCreateRQ\">\n            <Party>\n                <Sender>\n                    <RetailPartner>\n                        <RetailPartnerID>{{R_RetailPartnerID}}</RetailPartnerID>\n                    </RetailPartner>\n                </Sender>\n            </Party>\n            <PayloadAttributes>\n                <EchoTokenText>123456</EchoTokenText>\n                <PrimaryLangID>{{PrimaryLangID}}</PrimaryLangID>\n                <TrxStatusCode>Start</TrxStatusCode>\n                <VersionNumber>{{Version}}</VersionNumber>\n            </PayloadAttributes>\n            <PointOfSale>\n                <Country>\n                    <CountryCode>{{CountryCode}}</CountryCode>\n                </Country>\n                <Device>\n                    <DeviceCode>123</DeviceCode>\n                </Device>\n            </PointOfSale>\n            <Request>\n                <CreateOrder>\n                    <!--OfferPrice Flight - START -->\n                    <SelectedOffer>\n                        <OfferRefID>{{One_IATA_OfferPriceRS_OfferID}}</OfferRefID>\n                        <OwnerCode>{{One_IATA_AirShoppingRS_OwnerCode}}</OwnerCode>\n                        <SelectedOfferItem>\n                            <OfferItemRefID>{{One_IATA_OfferPriceRS_OfferItemID}}</OfferItemRefID>\n                            <PaxRefID>{{One_IATA_OfferPriceRS_PaxID1}}</PaxRefID>\n                            <PaxRefID>{{One_IATA_OfferPriceRS_PaxID2}}</PaxRefID>\n                        </SelectedOfferItem>\n                    <ShoppingResponseRefID>{{One_IATA_OfferPriceRS_ShoppingResponseRefID}}</ShoppingResponseRefID>\n                    <TotalOfferPriceAmount>{{One_IATA_OfferPriceRS_TotalAmountPassenger}}</TotalOfferPriceAmount>\n                </SelectedOffer>\n            </CreateOrder>\n            <DataLists>\n                <ContactInfoList>\n                    <ContactInfo>\n                        <ContactInfoID>CON-ADT-1</ContactInfoID>\n                        <ContactTypeText>Primary</ContactTypeText>\n                        <EmailAddress>\n                            <EmailAddressText>firstndcmodule@openjawtech.com</EmailAddressText>\n                        </EmailAddress>\n                        <Individual>\n                            <GivenName>FirstPaxGN</GivenName>\n                            <IndividualID>IDV-001</IndividualID>\n                            <SuffixName>FirstPaxSf</SuffixName>\n                            <Surname>FirstPaxSN</Surname>\n                            <TitleName>Mr</TitleName>\n                        </Individual>\n                        <Phone>\n                            <AreaCodeNumber>456</AreaCodeNumber>\n                            <CountryDialingCode>0086</CountryDialingCode>\n                            <LabelText>4</LabelText>\n                            <PhoneNumber>123456789</PhoneNumber>\n                        </Phone>\n                        <PostalAddress>\n                            <CityName>Madrid</CityName>\n                            <CountryCode>AA</CountryCode>\n                            <CountryName>Spain</CountryName>\n                            <CountrySubDivisionName>MAD</CountrySubDivisionName>\n                            <PostalCode>28045</PostalCode>\n                            <StreetText>Street Canto 11</StreetText>\n                        </PostalAddress>\n                    </ContactInfo>\n                    <ContactInfo>\n                        <ContactInfoID>CON-ADT-2</ContactInfoID>\n                        <ContactTypeText>Payment</ContactTypeText>\n                        <EmailAddress>\n                            <EmailAddressText>secondndcmodule@openjawtech.com</EmailAddressText> \n                        </EmailAddress>\n                        <Individual>\n                            <GivenName>SecondPaxGN</GivenName>\n                            <IndividualID>IDV-003</IndividualID>\n                            <SuffixName>SecondPaxSf</SuffixName>\n                            <Surname>SecondPaxSN</Surname>\n                            <TitleName>Miss</TitleName>\n                        </Individual>\n                        <Phone>\n                            <AreaCodeNumber>456</AreaCodeNumber>\n                            <CountryDialingCode>0086</CountryDialingCode>\n                            <LabelText>5</LabelText>\n                            <PhoneNumber>123456789</PhoneNumber>\n                        </Phone>\n                        <PostalAddress>\n                            <CityName>Madrid</CityName>\n                            <CountryCode>AA</CountryCode>\n                            <CountryName>Spain</CountryName>\n                            <CountrySubDivisionName>MAD</CountrySubDivisionName>\n                            <PostalCode>28045</PostalCode>\n                            <StreetText>Street Canto 22</StreetText>\n                        </PostalAddress>\n                    </ContactInfo>\n                </ContactInfoList>\n                <PaxList>\n                    <!-- FFP Pax -->\n                    <Pax>\n                        <AgeMeasure>30</AgeMeasure>\n                        <Birthdate>1989-02-19</Birthdate>\n                        <CitizenshipCountryCode>PT</CitizenshipCountryCode>\n                        <ContactInfoRefID>CON-ADT-1</ContactInfoRefID>\n                        <IdentityDoc>\n                            <CitizenshipCountryCode>PT</CitizenshipCountryCode>\n                            <ExpiryDate>2025-02-19</ExpiryDate>\n                            <IdentityDocID>123456789</IdentityDocID>\n                            <IdentityDocTypeCode>PT</IdentityDocTypeCode>\n                            <IssueDate>2017-05-01</IssueDate>\n                            <IssuingCountryCode>PT</IssuingCountryCode>\n                            <ResidenceCountryCode>PT</ResidenceCountryCode>\n                        </IdentityDoc>\n                        <Individual>\n                            <Birthdate>1989-02-19</Birthdate>\n                            <GenderCode>M</GenderCode>\n                            <GivenName>FirstPaxGN</GivenName>\n                            <IndividualID>IDV-002</IndividualID>\n                            <Surname>FirstPaxSN</Surname>\n                            <TitleName>Mr</TitleName>\n                        </Individual>\n                        <PaxID>{{One_IATA_OfferPriceRS_PaxID1}}</PaxID>\n                        <PTC>ADT</PTC>\n                    </Pax>\n                    <Pax>\n                        <AgeMeasure>6</AgeMeasure>\n                        <Birthdate>2014-02-19</Birthdate>\n                        <CitizenshipCountryCode>CN</CitizenshipCountryCode>\n                        <ContactInfoRefID>CON-ADT-2</ContactInfoRefID>\n                        <IdentityDoc>\n                            <CitizenshipCountryCode>CN</CitizenshipCountryCode>\n                            <ExpiryDate>2025-02-19</ExpiryDate>\n                            <IdentityDocID>123456789</IdentityDocID>\n                            <IdentityDocTypeCode>PT</IdentityDocTypeCode>\n                        </IdentityDoc>\n                        <Individual>\n                            <Birthdate>2014-02-19</Birthdate>\n                            <GivenName>SecondPaxGN</GivenName>\n                            <IndividualID>IDV-001</IndividualID>\n                            <SuffixName>SecondPaxSf</SuffixName>\n                            <Surname>SecondPaxSN</Surname>\n                            <TitleName>Mr</TitleName>\n                        </Individual>\n                        <PaxID>{{One_IATA_OfferPriceRS_PaxID2}}</PaxID>\n                        <PTC>CHD</PTC>\n                    </Pax>\n                </PaxList>\n            </DataLists>\n            <PaymentInfo>\n                <Amount CurCode=\"{{Currency}}\">{{One_IATA_OfferPriceRS_TotalAmountPassenger}}</Amount>\n                <ContactInfoRefID>CON-ADT-2</ContactInfoRefID>\n                <PaymentInfoID>1</PaymentInfoID>\n                <PaymentMethod>\n                    <PaymentCard>\n                        <CardBrandCode>VI</CardBrandCode>\n                        <CardHolderName>NDCModule</CardHolderName>\n                        <!-- non-3DS Pay -->\n                        <CardNumber>4512340621901233</CardNumber>\n                        <CardSecurityCode>123</CardSecurityCode>\n                        <CardTypeText>CC</CardTypeText>\n                        <ExpirationDate>1220</ExpirationDate>\n                    </PaymentCard>\n                </PaymentMethod>\n                <TypeCode>CC</TypeCode>\n            </PaymentInfo>\n        </Request>\n    </IATA_OrderCreateRQ>\n</soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {}
              }
            },
            "url": "{{BaseURLDataTrans}}{{APIVersion1DataTrans}}{{Context182}}{{OrderCreate}}",
            "description": "OrderCreate - Generic - 18.2 version\nReturn Type\nMix Pax: 2ADT + 2CHD"
          },
          "response": []
        }
      ],
      "_postman_id": "f48a1bdf-0482-4ff3-b283-40bab12de9cd",
      "description": "Test case RW for ancillaries where Order included a segment ancillary for the adult\n\nPre-requisites\n--------------\n\nAncillaries flag disabled for seller profile used",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "d7d02e94-d6d2-4b88-a69a-53da2cbcb4bb",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "daf66958-3d09-43d9-866d-6f6ccf2c91e7",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "1b9b29b3-fefb-34ef-94b4-73efc3f3969a"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "7e8c6830-7e1c-4db6-9ab0-eb6dad15981d",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "51ac54e5-e5e7-4348-85a5-903e46840e1b",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "cbe73f3b-33c8-48ea-b12d-9b8d9d30a1b8",
      "key": "O_RetailPartnerID",
      "value": "33",
      "type": "string"
    },
    {
      "id": "272ff990-0887-4f82-8fc4-e283f33cea62",
      "key": "R_RetailPartnerID",
      "value": "33",
      "type": "string"
    },
    {
      "id": "17be0f08-2ee3-4e23-8c32-8b4c8c6080bb",
      "key": "M_RetailPartnerID",
      "value": "33",
      "type": "string"
    },
    {
      "id": "493ab3fe-5fe8-41d9-8fe5-bc6f021cbf78",
      "key": "ANC_PartnerID",
      "value": "9999",
      "type": "string"
    },
    {
      "id": "3d88a580-bb43-479e-92dd-4685c943a3e9",
      "key": "FR_RetailPartnerID",
      "value": "317",
      "type": "string"
    },
    {
      "id": "e389f6a1-6ce1-459e-ae7d-268aeddc4e1e",
      "key": "FF_ANC_RetailPartnerID",
      "value": "208",
      "type": "string"
    },
    {
      "id": "97e7ddb6-35fe-448f-a707-f52b3d70ddc7",
      "key": "Upsell_PartnerID",
      "value": "194",
      "type": "string"
    },
    {
      "id": "10008b48-d5fb-4141-884d-22280e7e8a12",
      "key": "NDCSSR_PartnerID",
      "value": "NDCNoCHSSR",
      "type": "string"
    },
    {
      "id": "534837d5-9a73-4ab7-b3bb-a7b1468f89cd",
      "key": "ANC_NoSSR_PartnerID",
      "value": "4444",
      "type": "string"
    },
    {
      "id": "54f90d3d-b957-48e3-b14a-7add67df6d8b",
      "key": "Currency",
      "value": "EUR",
      "type": "string"
    },
    {
      "id": "1d71f861-8d59-468a-8513-430367c8f71b",
      "key": "AUDCurrency",
      "value": "AUD",
      "type": "string"
    },
    {
      "id": "41962378-b350-4db8-9ad5-cb4c86538366",
      "key": "GBPCurrency",
      "value": "GBP",
      "type": "string"
    },
    {
      "id": "c6565360-82a3-4fea-9996-fc10c5f8fc8e",
      "key": "DifCurrencyFlow",
      "value": "CAD",
      "type": "string"
    },
    {
      "id": "fbbd51c9-6193-4b68-a01e-65f3cc6dbecf",
      "key": "CurPOSElement",
      "value": "EUR",
      "type": "string"
    },
    {
      "id": "02fa1e96-eec9-43de-83e9-913f9bf46883",
      "key": "IATAOrigin",
      "value": "HND",
      "type": "string"
    },
    {
      "id": "d94798cf-664b-43b8-a0fe-fe232efa66b4",
      "key": "IATADest",
      "value": "SYD",
      "type": "string"
    },
    {
      "id": "f67fc395-0b80-44e2-921f-5747b6df2351",
      "key": "DepartDate",
      "value": "2020-02-12",
      "type": "string"
    },
    {
      "id": "db40a499-01e7-4813-b858-a53728b8ace2",
      "key": "ReturnDate",
      "value": "2020-02-17",
      "type": "string"
    },
    {
      "id": "30d57088-c829-46cf-95f5-69b1f79833bd",
      "key": "PrimaryLangID",
      "value": "en",
      "type": "string"
    },
    {
      "id": "00c8925a-2b3f-4ef5-acaf-afba6a556f7d",
      "key": "CountryCode",
      "value": "IE",
      "type": "string"
    },
    {
      "id": "86ec2a8c-9f00-4417-8a5d-64e00860b1ba",
      "key": "O_Cabin",
      "value": "5",
      "type": "string"
    },
    {
      "id": "ad5a2677-3dd9-4e73-935d-94e6034626c3",
      "key": "R_Cabin",
      "value": "7",
      "type": "string"
    },
    {
      "id": "f7dc8c8a-c47e-4371-aa40-4dbcbb40fc29",
      "key": "M_Cabin",
      "value": "5",
      "type": "string"
    },
    {
      "id": "d56ea8b6-eb18-4b21-9d0d-ba47d1e939da",
      "key": "Version",
      "value": "18.2",
      "type": "string"
    },
    {
      "id": "5b177eb1-2995-4fcf-8edc-596d769b8714",
      "key": "M_IATADest1",
      "value": "FUK",
      "type": "string"
    },
    {
      "id": "bcf74b75-b2d9-4f63-a00a-c08ff4ceeaab",
      "key": "M_IATAOrigin1",
      "value": "NGO",
      "type": "string"
    },
    {
      "id": "34217115-5074-4c72-985d-b6577cdc14d1",
      "key": "ANC_DepartDate",
      "value": "2020-02-06",
      "type": "string"
    },
    {
      "id": "89a04673-cd6f-44e6-9ced-9eb60f4b673d",
      "key": "M_Date1",
      "value": "2020-03-01",
      "type": "string"
    },
    {
      "id": "c27afe1b-f87b-4f8a-ac14-11790aae0e1e",
      "key": "M_Date2",
      "value": "2020-03-06",
      "type": "string"
    },
    {
      "id": "72cd9709-53e1-4715-9f74-03ab064d737e",
      "key": "M_Date3",
      "value": "2020-03-16",
      "type": "string"
    },
    {
      "id": "fb044891-b265-41a9-b386-5d3d69b66699",
      "key": "Carrier_OwnerCode",
      "value": "NH",
      "type": "string"
    },
    {
      "id": "cab62640-475d-4ff1-9973-000e85bad554",
      "key": "Carrier_Name",
      "value": "All Nippon Airways",
      "type": "string"
    },
    {
      "id": "3e08ddf9-b891-4d51-9a32-2bc42063e9df",
      "key": "Seat_IATADest",
      "value": "SYD",
      "type": "string"
    },
    {
      "id": "78531c93-d1f0-45a7-bad0-489df6854de0",
      "key": "Seat_IATAOrigin",
      "value": "HND",
      "type": "string"
    },
    {
      "id": "f6f33b8e-af7d-43c1-9c98-882bb34160b5",
      "key": "Seat_DepartDate",
      "value": "2020-02-20",
      "type": "string"
    },
    {
      "id": "de95cec3-3e1a-4a03-b8da-1d6488167cab",
      "key": "Seat_ReturnDate",
      "value": "2020-02-25",
      "type": "string"
    },
    {
      "id": "0fbb4f00-5489-419c-8d7b-928267984d41",
      "key": "M_IATADest3",
      "value": "SYD",
      "type": "string"
    },
    {
      "id": "2845d0bd-3c80-4f4e-9017-baf7cb362503",
      "key": "M_IATAOrigin3",
      "value": "HND",
      "type": "string"
    },
    {
      "id": "f4eeca23-e47f-49cd-9d8d-8952bcb44205",
      "key": "ANC_IATAOrigin",
      "value": "HND",
      "type": "string"
    },
    {
      "id": "0d102d45-7eec-4310-bae0-16ab6ef52972",
      "key": "ANC_IATADest",
      "value": "SYD",
      "type": "string"
    },
    {
      "id": "855e83ca-58f9-4643-9efa-17fd36530fc1",
      "key": "M_IATAOrigin2",
      "value": "FRU",
      "type": "string"
    },
    {
      "id": "64a57594-ef72-45af-b830-fb7042425bab",
      "key": "ANC_IATADest2",
      "value": "SYD",
      "type": "string"
    },
    {
      "id": "8242a116-b521-4aba-a9ae-1b858cf4df28",
      "key": "wso2_app_access_token_182",
      "value": "1b9b29b3-fefb-34ef-94b4-73efc3f3969a",
      "type": "string"
    }
  ]
}